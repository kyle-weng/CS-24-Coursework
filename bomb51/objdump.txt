
bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b30 <_init>:
  400b30:	48 83 ec 08          	sub    $0x8,%rsp
  400b34:	48 8b 05 bd 34 20 00 	mov    0x2034bd(%rip),%rax        # 603ff8 <__gmon_start__>
  400b3b:	48 85 c0             	test   %rax,%rax
  400b3e:	74 02                	je     400b42 <_init+0x12>
  400b40:	ff d0                	callq  *%rax
  400b42:	48 83 c4 08          	add    $0x8,%rsp
  400b46:	c3                   	retq   

Disassembly of section .plt:

0000000000400b50 <.plt>:
  400b50:	ff 35 b2 34 20 00    	pushq  0x2034b2(%rip)        # 604008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b56:	ff 25 b4 34 20 00    	jmpq   *0x2034b4(%rip)        # 604010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b60 <getenv@plt>:
  400b60:	ff 25 b2 34 20 00    	jmpq   *0x2034b2(%rip)        # 604018 <getenv@GLIBC_2.2.5>
  400b66:	68 00 00 00 00       	pushq  $0x0
  400b6b:	e9 e0 ff ff ff       	jmpq   400b50 <.plt>

0000000000400b70 <strcasecmp@plt>:
  400b70:	ff 25 aa 34 20 00    	jmpq   *0x2034aa(%rip)        # 604020 <strcasecmp@GLIBC_2.2.5>
  400b76:	68 01 00 00 00       	pushq  $0x1
  400b7b:	e9 d0 ff ff ff       	jmpq   400b50 <.plt>

0000000000400b80 <__errno_location@plt>:
  400b80:	ff 25 a2 34 20 00    	jmpq   *0x2034a2(%rip)        # 604028 <__errno_location@GLIBC_2.2.5>
  400b86:	68 02 00 00 00       	pushq  $0x2
  400b8b:	e9 c0 ff ff ff       	jmpq   400b50 <.plt>

0000000000400b90 <strcpy@plt>:
  400b90:	ff 25 9a 34 20 00    	jmpq   *0x20349a(%rip)        # 604030 <strcpy@GLIBC_2.2.5>
  400b96:	68 03 00 00 00       	pushq  $0x3
  400b9b:	e9 b0 ff ff ff       	jmpq   400b50 <.plt>

0000000000400ba0 <puts@plt>:
  400ba0:	ff 25 92 34 20 00    	jmpq   *0x203492(%rip)        # 604038 <puts@GLIBC_2.2.5>
  400ba6:	68 04 00 00 00       	pushq  $0x4
  400bab:	e9 a0 ff ff ff       	jmpq   400b50 <.plt>

0000000000400bb0 <write@plt>:
  400bb0:	ff 25 8a 34 20 00    	jmpq   *0x20348a(%rip)        # 604040 <write@GLIBC_2.2.5>
  400bb6:	68 05 00 00 00       	pushq  $0x5
  400bbb:	e9 90 ff ff ff       	jmpq   400b50 <.plt>

0000000000400bc0 <printf@plt>:
  400bc0:	ff 25 82 34 20 00    	jmpq   *0x203482(%rip)        # 604048 <printf@GLIBC_2.2.5>
  400bc6:	68 06 00 00 00       	pushq  $0x6
  400bcb:	e9 80 ff ff ff       	jmpq   400b50 <.plt>

0000000000400bd0 <alarm@plt>:
  400bd0:	ff 25 7a 34 20 00    	jmpq   *0x20347a(%rip)        # 604050 <alarm@GLIBC_2.2.5>
  400bd6:	68 07 00 00 00       	pushq  $0x7
  400bdb:	e9 70 ff ff ff       	jmpq   400b50 <.plt>

0000000000400be0 <close@plt>:
  400be0:	ff 25 72 34 20 00    	jmpq   *0x203472(%rip)        # 604058 <close@GLIBC_2.2.5>
  400be6:	68 08 00 00 00       	pushq  $0x8
  400beb:	e9 60 ff ff ff       	jmpq   400b50 <.plt>

0000000000400bf0 <read@plt>:
  400bf0:	ff 25 6a 34 20 00    	jmpq   *0x20346a(%rip)        # 604060 <read@GLIBC_2.2.5>
  400bf6:	68 09 00 00 00       	pushq  $0x9
  400bfb:	e9 50 ff ff ff       	jmpq   400b50 <.plt>

0000000000400c00 <fgets@plt>:
  400c00:	ff 25 62 34 20 00    	jmpq   *0x203462(%rip)        # 604068 <fgets@GLIBC_2.2.5>
  400c06:	68 0a 00 00 00       	pushq  $0xa
  400c0b:	e9 40 ff ff ff       	jmpq   400b50 <.plt>

0000000000400c10 <signal@plt>:
  400c10:	ff 25 5a 34 20 00    	jmpq   *0x20345a(%rip)        # 604070 <signal@GLIBC_2.2.5>
  400c16:	68 0b 00 00 00       	pushq  $0xb
  400c1b:	e9 30 ff ff ff       	jmpq   400b50 <.plt>

0000000000400c20 <gethostbyname@plt>:
  400c20:	ff 25 52 34 20 00    	jmpq   *0x203452(%rip)        # 604078 <gethostbyname@GLIBC_2.2.5>
  400c26:	68 0c 00 00 00       	pushq  $0xc
  400c2b:	e9 20 ff ff ff       	jmpq   400b50 <.plt>

0000000000400c30 <fprintf@plt>:
  400c30:	ff 25 4a 34 20 00    	jmpq   *0x20344a(%rip)        # 604080 <fprintf@GLIBC_2.2.5>
  400c36:	68 0d 00 00 00       	pushq  $0xd
  400c3b:	e9 10 ff ff ff       	jmpq   400b50 <.plt>

0000000000400c40 <strtol@plt>:
  400c40:	ff 25 42 34 20 00    	jmpq   *0x203442(%rip)        # 604088 <strtol@GLIBC_2.2.5>
  400c46:	68 0e 00 00 00       	pushq  $0xe
  400c4b:	e9 00 ff ff ff       	jmpq   400b50 <.plt>

0000000000400c50 <fflush@plt>:
  400c50:	ff 25 3a 34 20 00    	jmpq   *0x20343a(%rip)        # 604090 <fflush@GLIBC_2.2.5>
  400c56:	68 0f 00 00 00       	pushq  $0xf
  400c5b:	e9 f0 fe ff ff       	jmpq   400b50 <.plt>

0000000000400c60 <__isoc99_sscanf@plt>:
  400c60:	ff 25 32 34 20 00    	jmpq   *0x203432(%rip)        # 604098 <__isoc99_sscanf@GLIBC_2.7>
  400c66:	68 10 00 00 00       	pushq  $0x10
  400c6b:	e9 e0 fe ff ff       	jmpq   400b50 <.plt>

0000000000400c70 <bcopy@plt>:
  400c70:	ff 25 2a 34 20 00    	jmpq   *0x20342a(%rip)        # 6040a0 <bcopy@GLIBC_2.2.5>
  400c76:	68 11 00 00 00       	pushq  $0x11
  400c7b:	e9 d0 fe ff ff       	jmpq   400b50 <.plt>

0000000000400c80 <fopen@plt>:
  400c80:	ff 25 22 34 20 00    	jmpq   *0x203422(%rip)        # 6040a8 <fopen@GLIBC_2.2.5>
  400c86:	68 12 00 00 00       	pushq  $0x12
  400c8b:	e9 c0 fe ff ff       	jmpq   400b50 <.plt>

0000000000400c90 <gethostname@plt>:
  400c90:	ff 25 1a 34 20 00    	jmpq   *0x20341a(%rip)        # 6040b0 <gethostname@GLIBC_2.2.5>
  400c96:	68 13 00 00 00       	pushq  $0x13
  400c9b:	e9 b0 fe ff ff       	jmpq   400b50 <.plt>

0000000000400ca0 <sprintf@plt>:
  400ca0:	ff 25 12 34 20 00    	jmpq   *0x203412(%rip)        # 6040b8 <sprintf@GLIBC_2.2.5>
  400ca6:	68 14 00 00 00       	pushq  $0x14
  400cab:	e9 a0 fe ff ff       	jmpq   400b50 <.plt>

0000000000400cb0 <exit@plt>:
  400cb0:	ff 25 0a 34 20 00    	jmpq   *0x20340a(%rip)        # 6040c0 <exit@GLIBC_2.2.5>
  400cb6:	68 15 00 00 00       	pushq  $0x15
  400cbb:	e9 90 fe ff ff       	jmpq   400b50 <.plt>

0000000000400cc0 <connect@plt>:
  400cc0:	ff 25 02 34 20 00    	jmpq   *0x203402(%rip)        # 6040c8 <connect@GLIBC_2.2.5>
  400cc6:	68 16 00 00 00       	pushq  $0x16
  400ccb:	e9 80 fe ff ff       	jmpq   400b50 <.plt>

0000000000400cd0 <sleep@plt>:
  400cd0:	ff 25 fa 33 20 00    	jmpq   *0x2033fa(%rip)        # 6040d0 <sleep@GLIBC_2.2.5>
  400cd6:	68 17 00 00 00       	pushq  $0x17
  400cdb:	e9 70 fe ff ff       	jmpq   400b50 <.plt>

0000000000400ce0 <__ctype_b_loc@plt>:
  400ce0:	ff 25 f2 33 20 00    	jmpq   *0x2033f2(%rip)        # 6040d8 <__ctype_b_loc@GLIBC_2.3>
  400ce6:	68 18 00 00 00       	pushq  $0x18
  400ceb:	e9 60 fe ff ff       	jmpq   400b50 <.plt>

0000000000400cf0 <socket@plt>:
  400cf0:	ff 25 ea 33 20 00    	jmpq   *0x2033ea(%rip)        # 6040e0 <socket@GLIBC_2.2.5>
  400cf6:	68 19 00 00 00       	pushq  $0x19
  400cfb:	e9 50 fe ff ff       	jmpq   400b50 <.plt>

Disassembly of section .text:

0000000000400d00 <_start>:
  400d00:	31 ed                	xor    %ebp,%ebp
  400d02:	49 89 d1             	mov    %rdx,%r9
  400d05:	5e                   	pop    %rsi
  400d06:	48 89 e2             	mov    %rsp,%rdx
  400d09:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400d0d:	50                   	push   %rax
  400d0e:	54                   	push   %rsp
  400d0f:	49 c7 c0 60 23 40 00 	mov    $0x402360,%r8
  400d16:	48 c7 c1 f0 22 40 00 	mov    $0x4022f0,%rcx
  400d1d:	48 c7 c7 d7 0d 40 00 	mov    $0x400dd7,%rdi
  400d24:	ff 15 c6 32 20 00    	callq  *0x2032c6(%rip)        # 603ff0 <__libc_start_main@GLIBC_2.2.5>
  400d2a:	f4                   	hlt    
  400d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400d30 <deregister_tm_clones>:
  400d30:	55                   	push   %rbp
  400d31:	b8 80 47 60 00       	mov    $0x604780,%eax
  400d36:	48 3d 80 47 60 00    	cmp    $0x604780,%rax
  400d3c:	48 89 e5             	mov    %rsp,%rbp
  400d3f:	74 17                	je     400d58 <deregister_tm_clones+0x28>
  400d41:	b8 00 00 00 00       	mov    $0x0,%eax
  400d46:	48 85 c0             	test   %rax,%rax
  400d49:	74 0d                	je     400d58 <deregister_tm_clones+0x28>
  400d4b:	5d                   	pop    %rbp
  400d4c:	bf 80 47 60 00       	mov    $0x604780,%edi
  400d51:	ff e0                	jmpq   *%rax
  400d53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400d58:	5d                   	pop    %rbp
  400d59:	c3                   	retq   
  400d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400d60 <register_tm_clones>:
  400d60:	be 80 47 60 00       	mov    $0x604780,%esi
  400d65:	55                   	push   %rbp
  400d66:	48 81 ee 80 47 60 00 	sub    $0x604780,%rsi
  400d6d:	48 89 e5             	mov    %rsp,%rbp
  400d70:	48 c1 fe 03          	sar    $0x3,%rsi
  400d74:	48 89 f0             	mov    %rsi,%rax
  400d77:	48 c1 e8 3f          	shr    $0x3f,%rax
  400d7b:	48 01 c6             	add    %rax,%rsi
  400d7e:	48 d1 fe             	sar    %rsi
  400d81:	74 15                	je     400d98 <register_tm_clones+0x38>
  400d83:	b8 00 00 00 00       	mov    $0x0,%eax
  400d88:	48 85 c0             	test   %rax,%rax
  400d8b:	74 0b                	je     400d98 <register_tm_clones+0x38>
  400d8d:	5d                   	pop    %rbp
  400d8e:	bf 80 47 60 00       	mov    $0x604780,%edi
  400d93:	ff e0                	jmpq   *%rax
  400d95:	0f 1f 00             	nopl   (%rax)
  400d98:	5d                   	pop    %rbp
  400d99:	c3                   	retq   
  400d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400da0 <__do_global_dtors_aux>:
  400da0:	80 3d 01 3a 20 00 00 	cmpb   $0x0,0x203a01(%rip)        # 6047a8 <completed.6990>
  400da7:	75 17                	jne    400dc0 <__do_global_dtors_aux+0x20>
  400da9:	55                   	push   %rbp
  400daa:	48 89 e5             	mov    %rsp,%rbp
  400dad:	e8 7e ff ff ff       	callq  400d30 <deregister_tm_clones>
  400db2:	c6 05 ef 39 20 00 01 	movb   $0x1,0x2039ef(%rip)        # 6047a8 <completed.6990>
  400db9:	5d                   	pop    %rbp
  400dba:	c3                   	retq   
  400dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400dc0:	f3 c3                	repz retq 
  400dc2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400dc9:	00 00 00 00 
  400dcd:	0f 1f 00             	nopl   (%rax)

0000000000400dd0 <frame_dummy>:
  400dd0:	55                   	push   %rbp
  400dd1:	48 89 e5             	mov    %rsp,%rbp
  400dd4:	5d                   	pop    %rbp
  400dd5:	eb 89                	jmp    400d60 <register_tm_clones>

0000000000400dd7 <main>:
  400dd7:	53                   	push   %rbx
  400dd8:	83 ff 01             	cmp    $0x1,%edi
  400ddb:	0f 84 d6 00 00 00    	je     400eb7 <main+0xe0>
  400de1:	48 89 f3             	mov    %rsi,%rbx
  400de4:	83 ff 02             	cmp    $0x2,%edi
  400de7:	0f 85 f8 00 00 00    	jne    400ee5 <main+0x10e>
  400ded:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400df1:	be 84 23 40 00       	mov    $0x402384,%esi
  400df6:	e8 85 fe ff ff       	callq  400c80 <fopen@plt>
  400dfb:	48 89 05 ae 39 20 00 	mov    %rax,0x2039ae(%rip)        # 6047b0 <infile>
  400e02:	48 85 c0             	test   %rax,%rax
  400e05:	0f 84 bf 00 00 00    	je     400eca <main+0xf3>
  400e0b:	e8 bb 05 00 00       	callq  4013cb <initialize_bomb>
  400e10:	bf 10 24 40 00       	mov    $0x402410,%edi
  400e15:	e8 86 fd ff ff       	callq  400ba0 <puts@plt>
  400e1a:	bf 50 24 40 00       	mov    $0x402450,%edi
  400e1f:	e8 7c fd ff ff       	callq  400ba0 <puts@plt>
  400e24:	e8 15 08 00 00       	callq  40163e <read_line>
  400e29:	48 89 c7             	mov    %rax,%rdi
  400e2c:	e8 d0 00 00 00       	callq  400f01 <phase_1>
  400e31:	e8 36 09 00 00       	callq  40176c <phase_defused>
  400e36:	bf 80 24 40 00       	mov    $0x402480,%edi
  400e3b:	e8 60 fd ff ff       	callq  400ba0 <puts@plt>
  400e40:	e8 f9 07 00 00       	callq  40163e <read_line>
  400e45:	48 89 c7             	mov    %rax,%rdi
  400e48:	e8 d2 00 00 00       	callq  400f1f <phase_2>
  400e4d:	e8 1a 09 00 00       	callq  40176c <phase_defused>
  400e52:	bf bd 23 40 00       	mov    $0x4023bd,%edi
  400e57:	e8 44 fd ff ff       	callq  400ba0 <puts@plt>
  400e5c:	bf db 23 40 00       	mov    $0x4023db,%edi
  400e61:	e8 3a fd ff ff       	callq  400ba0 <puts@plt>
  400e66:	e8 d3 07 00 00       	callq  40163e <read_line>
  400e6b:	48 89 c7             	mov    %rax,%rdi
  400e6e:	e8 ea 01 00 00       	callq  40105d <phase_4>
  400e73:	e8 f4 08 00 00       	callq  40176c <phase_defused>
  400e78:	bf b0 24 40 00       	mov    $0x4024b0,%edi
  400e7d:	e8 1e fd ff ff       	callq  400ba0 <puts@plt>
  400e82:	e8 b7 07 00 00       	callq  40163e <read_line>
  400e87:	48 89 c7             	mov    %rax,%rdi
  400e8a:	e8 1f 02 00 00       	callq  4010ae <phase_5>
  400e8f:	e8 d8 08 00 00       	callq  40176c <phase_defused>
  400e94:	bf ef 23 40 00       	mov    $0x4023ef,%edi
  400e99:	e8 02 fd ff ff       	callq  400ba0 <puts@plt>
  400e9e:	e8 9b 07 00 00       	callq  40163e <read_line>
  400ea3:	48 89 c7             	mov    %rax,%rdi
  400ea6:	e8 76 02 00 00       	callq  401121 <phase_6>
  400eab:	e8 bc 08 00 00       	callq  40176c <phase_defused>
  400eb0:	b8 00 00 00 00       	mov    $0x0,%eax
  400eb5:	5b                   	pop    %rbx
  400eb6:	c3                   	retq   
  400eb7:	48 8b 05 d2 38 20 00 	mov    0x2038d2(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  400ebe:	48 89 05 eb 38 20 00 	mov    %rax,0x2038eb(%rip)        # 6047b0 <infile>
  400ec5:	e9 41 ff ff ff       	jmpq   400e0b <main+0x34>
  400eca:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  400ece:	48 8b 33             	mov    (%rbx),%rsi
  400ed1:	bf 86 23 40 00       	mov    $0x402386,%edi
  400ed6:	e8 e5 fc ff ff       	callq  400bc0 <printf@plt>
  400edb:	bf 08 00 00 00       	mov    $0x8,%edi
  400ee0:	e8 cb fd ff ff       	callq  400cb0 <exit@plt>
  400ee5:	48 8b 36             	mov    (%rsi),%rsi
  400ee8:	bf a3 23 40 00       	mov    $0x4023a3,%edi
  400eed:	b8 00 00 00 00       	mov    $0x0,%eax
  400ef2:	e8 c9 fc ff ff       	callq  400bc0 <printf@plt>
  400ef7:	bf 08 00 00 00       	mov    $0x8,%edi
  400efc:	e8 af fd ff ff       	callq  400cb0 <exit@plt>

0000000000400f01 <phase_1>:
  400f01:   48 83 ec 08             sub    $0x8,%rsp                  # %rsp -= 0x8
  400f05:   be d8 24 40 00          mov    $0x4024d8,%esi             # %esi = 0x4024d8
  400f0a:   e8 55 04 00 00          callq  401364 <strings_not_equal> # takes first string from  %edi, takes second string from %esi, returns 1 or 0 in %eax
  400f0f:   85 c0                   test   %eax,%eax                  # r1 = r2 = 0 -> ZF = 1, else ZF = 0
  400f11:   75 05                   jne    400f18 <phase_1+0x17>      # %rip = 400f18 if ZF != 0
  400f13:   48 83 c4 08             add    $0x8,%rsp                  # %rsp += 0x8
  400f17:   c3                      retq
  400f18:   e8 ac 06 00 00          callq  4015c9 <explode_bomb>      # yikes
  400f1d:   eb f4                   jmp    400f13 <phase_1+0x12>

0000000000400f1f <phase_2>:
																			   # BEFORE:
       rax 0x0000000000604810           rbx 0x00007fffffffe038       rcx 0x000000000000000b       rdx 0x0000000000604810
       rsi 0x0000000000000001           rdi 0x0000000000604810       rbp 0x00000000004022f0       rsp 0x00007fffffffdf48
        r8 0x00000000006068ac            r9 0x0000000000000000       r10 0x00007ffff7fc0500       r11 0x0000000000000246
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000400f1f        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000
  400f1f:	55                   	push   %rbp								   # %rsp -= sizeof(%rbp); *(%rsp) = %rbp
																			   # AFTER RUNNING
																			   # %rbp = 0x04022f0
																			   # %rsp = 0x07fffffffdf40
       rax 0x0000000000604810           rbx 0x00007fffffffe038       rcx 0x000000000000000b       rdx 0x0000000000604810
       rsi 0x0000000000000001           rdi 0x0000000000604810       rbp 0x00000000004022f0       rsp 0x00007fffffffdf40
        r8 0x00000000006068ac            r9 0x0000000000000000       r10 0x00007ffff7fc0500       r11 0x0000000000000246
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000400f20        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000

  400f20:	53                   	push   %rbx								   # %rsp -= sizeof(%rbx); *(%rsp) = rbx
																			   # AFTER RUNNING
																			   # %rbx = 0x07fffffffe038
																			   # %rsp = 0x07fffffffdf38
       rax 0x0000000000604810           rbx 0x00007fffffffe038       rcx 0x000000000000000b       rdx 0x0000000000604810
       rsi 0x0000000000000001           rdi 0x0000000000604810       rbp 0x00000000004022f0       rsp 0x00007fffffffdf38
        r8 0x00000000006068ac            r9 0x0000000000000000       r10 0x00007ffff7fc0500       r11 0x0000000000000246
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000400f21        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000
  400f21:	48 83 ec 28          	sub    $0x28,%rsp						   # %rsp -= 0x28
																			   # AFTER RUNNING
																			   # %rsp = 0x07fffffffdf10
      rax 0x0000000000604810         rbx 0x00007fffffffe038      rcx 0x0000000000000014      rdx 0x0000000000604810
      rsi 0x0000000000000001         rdi 0x0000000000604810      rbp 0x00000000004022f0      rsp 0x00007fffffffdf10
       r8 0x00000000006068b5          r9 0x0000000000000000      r10 0x00007ffff7fc0500      r11 0x0000000000000246
      r12 0x0000000000400d00         r13 0x00007fffffffe030      r14 0x0000000000000000      r15 0x0000000000000000
      rip 0x0000000000400f25      eflags [ IF ]                   cs 0x00000033               ss 0x0000002b
       ds 0x00000000                  es 0x00000000               fs 0x00000000               gs 0x00000000
  400f25:	48 89 e6             	mov    %rsp,%rsi                           # %rsi = %rsp
																			   # AFTER RUNNING
																			   # %rsi = 0x07fffffffdf10
																			   # IF = 1
																			   # %rsp = 0x00007fffffffdf10
      rax 0x0000000000604810         rbx 0x00007fffffffe038      rcx 0x0000000000000014      rdx 0x0000000000604810
      rsi 0x00007fffffffdf10         rdi 0x0000000000604810      rbp 0x00000000004022f0      rsp 0x00007fffffffdf10
       r8 0x00000000006068b5          r9 0x0000000000000000      r10 0x00007ffff7fc0500      r11 0x0000000000000246
      r12 0x0000000000400d00         r13 0x00007fffffffe030      r14 0x0000000000000000      r15 0x0000000000000000
      rip 0x0000000000400f28      eflags [ IF ]                   cs 0x00000033               ss 0x0000002b
       ds 0x00000000                  es 0x00000000               fs 0x00000000               gs 0x00000000
  400f28:	e8 d2 06 00 00       	callq  4015ff <read_six_numbers>           # read six numbers
																			   # AFTER RUNNING
																			   # CF = 0
																			   # AF = 0
																			   # SF = 0
																			   # IF = 1
																			   # %rsp = 0x00007fffffffdf10
																			   # to print to what a pointer points to, p/s *0xetc...
      rax 0x0000000000000006         rbx 0x00007fffffffe038      rcx 0x0000000000000000      rdx 0x00007fffffffdf24
      rsi 0x0000000000000000         rdi 0x00007fffffffd880      rbp 0x00000000004022f0      rsp 0x00007fffffffdf10
       r8 0x00007fffffffd884          r9 0x00000000ffffffff      r10 0x0000000000000000      r11 0x000000000000000a
      r12 0x0000000000400d00         r13 0x00007fffffffe030      r14 0x0000000000000000      r15 0x0000000000000000
      rip 0x0000000000400f2d      eflags [ IF ]                   cs 0x00000033               ss 0x0000002b
       ds 0x00000000                  es 0x00000000               fs 0x00000000               gs 0x00000000
  400f2d:	83 3c 24 00          	cmpl   $0x0,(%rsp)						   # cmpl is just cmp but for unsigned
																			   # WHAT IS AN UNSIGNED CARRY OUT?
																			   # https://stackoverflow.com/questions/19301498/carry-flag-auxiliary-flag-and-overflow-flag-in-assembly
																			   # ex. 255 + 9 = 264, 8 will be stored (264 & 255 = 8), CF = 1
																			   # ex. 5 - 6 -> 255 , carry out flag = 1
																			   # WHAT IS A SIGNED OVERFLOW?
																			   # ex. 127 + 2 = 129, which is too big for an 8 bit signed, OF = 1
																			   # ZF = (dereferenced rsp) - 0 == 0
																			   # SF = (dereferenced rsp) - 0 < 0

																			   # BEFORE RUNTIME
																			   # rsp = 0x00007fffffffdf10

																			   # RUNTIME
																			   # x/s ($rsp) = 0, obtained by setting the first number equal to 0


  400f31:	75 07                	jne    400f3a <phase_2+0x1b>			   # %rip = 400f3a if !ZF == 1
																			   # let's try to get ZF to equal 1 to avoid this
  400f33:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)					   # *(%rsp) + 0x4 - 0x1 = 0 is the goal, so ZF = 1
  400f38:	74 05                	je     400f3f <phase_2+0x20>			   # so that way this can work because we want to run away
																			   # skip with the second argument equal to 1
      rax 0x0000000000000006         rbx 0x00007fffffffe038      rcx 0x0000000000000000      rdx 0x00007fffffffdf24
      rsi 0x0000000000000000         rdi 0x00007fffffffd880      rbp 0x00000000004022f0      rsp 0x00007fffffffdf10
       r8 0x00007fffffffd884          r9 0x00000000ffffffff      r10 0x0000000000000000      r11 0x000000000000000a
      r12 0x0000000000400d00         r13 0x00007fffffffe030      r14 0x0000000000000000      r15 0x0000000000000000
      rip 0x0000000000400f3f      eflags [ PF ZF IF ]             cs 0x00000033               ss 0x0000002b
       ds 0x00000000                  es 0x00000000               fs 0x00000000               gs 0x00000000
  400f3a:	e8 8a 06 00 00       	callq  4015c9 <explode_bomb>			   # oh god oh fuck

																			   # for input = 0 1 2 3...
																			   # p *(unsigned int*)($rsp) = 0
																			   # p *(unsigned int*)($rsp + 4) = 1
																			   # and so on...

  400f3f:	48 89 e3             	mov    %rsp,%rbx						   # %rbx = %rsp
																			   # AFTER RUNNING:
       rax 0x0000000000000006           rbx 0x00007fffffffdf10       rcx 0x0000000000000000       rdx 0x00007fffffffdf24
       rsi 0x0000000000000000           rdi 0x00007fffffffd880       rbp 0x00000000004022f0       rsp 0x00007fffffffdf10
        r8 0x00007fffffffd881            r9 0x00000000ffffffff       r10 0x0000000000000000       r11 0x000000000000000a
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000400f42        eflags [ PF ZF IF ]              cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000
  400f42:	48 8d 6b 10          	lea    0x10(%rbx),%rbp					   # %rbp = %rbx + 10 // %rbp = %rsp + 10
																			   # AFTER RUNNING:
       rax 0x0000000000000006           rbx 0x00007fffffffdf10       rcx 0x0000000000000000       rdx 0x00007fffffffdf24
       rsi 0x0000000000000000           rdi 0x00007fffffffd880       rbp 0x00007fffffffdf20       rsp 0x00007fffffffdf10
        r8 0x00007fffffffd881            r9 0x00000000ffffffff       r10 0x0000000000000000       r11 0x000000000000000a
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000400f46        eflags [ PF ZF IF ]              cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000
  400f46:	eb 09                	jmp    400f51 <phase_2+0x32>



  400f48:	48 83 c3 04          	add    $0x4,%rbx						   # %rbx += 0x4 // %rbx = %rsp + 4
																			   # AFTER RUNNING:
       rax 0x0000000000000001           rbx 0x00007fffffffdf14       rcx 0x0000000000000000       rdx 0x00007fffffffdf24
       rsi 0x0000000000000000           rdi 0x00007fffffffd880       rbp 0x00007fffffffdf20       rsp 0x00007fffffffdf10
        r8 0x00007fffffffd881            r9 0x00000000ffffffff       r10 0x0000000000000000       r11 0x000000000000000a
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000400f4c        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000

  400f4c:	48 39 eb             	cmp    %rbp,%rbx						   # we want ZF = 1, so %rbx should equal %rbp

  400f4f:	74 11                	je     400f62 <phase_2+0x43>			   # we want this jump to succeed, so we want ZF = 1
																			   # so we want %rbx = %rbp
																			   # so we want %rsp + 4 = %rsp + 10
																			   # 


  400f51:	8b 43 04             	mov    0x4(%rbx),%eax					   # %eax = *(%rbx + 4) // %eax = *(%rsp + 4) // %eax = 1

  400f54:	03 03                	add    (%rbx),%eax						   # %eax += *(%rbx) // %eax += *(%rsp) // %eax += 0 // %eax = 1
  400f56:	39 43 08             	cmp    %eax,0x8(%rbx)					   # we want ZF to equal 1
																			   # so we want *(%rbx + 8) = %eax
																			   # so we want *(%rsp + 8) = 1
																			   # so we want the third argument to equal 1!
  400f59:	74 ed                	je     400f48 <phase_2+0x29>			   # we want this jump to succeed


																			   # so ZF should equal 1
  400f5b:	e8 69 06 00 00       	callq  4015c9 <explode_bomb>
  400f60:	eb e6                	jmp    400f48 <phase_2+0x29>
  400f62:	48 83 c4 28          	add    $0x28,%rsp
  400f66:	5b                   	pop    %rbx
  400f67:	5d                   	pop    %rbp
  400f68:	c3                   	retq   

0000000000400f69 <phase_3>:
  400f69:	48 83 ec 18          	sub    $0x18,%rsp
  400f6d:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  400f72:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  400f77:	be ed 27 40 00       	mov    $0x4027ed,%esi
  400f7c:	b8 00 00 00 00       	mov    $0x0,%eax
  400f81:	e8 da fc ff ff       	callq  400c60 <__isoc99_sscanf@plt>
  400f86:	83 f8 01             	cmp    $0x1,%eax
  400f89:	7e 16                	jle    400fa1 <phase_3+0x38>
  400f8b:	83 7c 24 0c 07       	cmpl   $0x7,0xc(%rsp)
  400f90:	0f 87 82 00 00 00    	ja     401018 <phase_3+0xaf>
  400f96:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  400f9a:	ff 24 c5 20 25 40 00 	jmpq   *0x402520(,%rax,8)
  400fa1:	e8 23 06 00 00       	callq  4015c9 <explode_bomb>
  400fa6:	eb e3                	jmp    400f8b <phase_3+0x22>
  400fa8:	b8 f9 02 00 00       	mov    $0x2f9,%eax
  400fad:	eb 05                	jmp    400fb4 <phase_3+0x4b>
  400faf:	b8 00 00 00 00       	mov    $0x0,%eax
  400fb4:	2d 9a 03 00 00       	sub    $0x39a,%eax
  400fb9:	05 0f 02 00 00       	add    $0x20f,%eax
  400fbe:	2d 0f 02 00 00       	sub    $0x20f,%eax
  400fc3:	05 0f 02 00 00       	add    $0x20f,%eax
  400fc8:	2d 0f 02 00 00       	sub    $0x20f,%eax
  400fcd:	05 0f 02 00 00       	add    $0x20f,%eax
  400fd2:	2d 0f 02 00 00       	sub    $0x20f,%eax
  400fd7:	83 7c 24 0c 05       	cmpl   $0x5,0xc(%rsp)
  400fdc:	7f 06                	jg     400fe4 <phase_3+0x7b>
  400fde:	39 44 24 08          	cmp    %eax,0x8(%rsp)
  400fe2:	74 05                	je     400fe9 <phase_3+0x80>
  400fe4:	e8 e0 05 00 00       	callq  4015c9 <explode_bomb>
  400fe9:	48 83 c4 18          	add    $0x18,%rsp
  400fed:	c3                   	retq   
  400fee:	b8 00 00 00 00       	mov    $0x0,%eax
  400ff3:	eb c4                	jmp    400fb9 <phase_3+0x50>
  400ff5:	b8 00 00 00 00       	mov    $0x0,%eax
  400ffa:	eb c2                	jmp    400fbe <phase_3+0x55>
  400ffc:	b8 00 00 00 00       	mov    $0x0,%eax
  401001:	eb c0                	jmp    400fc3 <phase_3+0x5a>
  401003:	b8 00 00 00 00       	mov    $0x0,%eax
  401008:	eb be                	jmp    400fc8 <phase_3+0x5f>
  40100a:	b8 00 00 00 00       	mov    $0x0,%eax
  40100f:	eb bc                	jmp    400fcd <phase_3+0x64>
  401011:	b8 00 00 00 00       	mov    $0x0,%eax
  401016:	eb ba                	jmp    400fd2 <phase_3+0x69>
  401018:	e8 ac 05 00 00       	callq  4015c9 <explode_bomb>
  40101d:	b8 00 00 00 00       	mov    $0x0,%eax
  401022:	eb b3                	jmp    400fd7 <phase_3+0x6e>

0000000000401024 <func4>:
  401024:	b8 00 00 00 00       	mov    $0x0,%eax						   # %eax = 0												#
  401029:	85 ff                	test   %edi,%edi						   # sets ZF to 0, SF to 0 (with %edi = 6 as per earlier)   # ZF = 0, SF = 0 (note edi now equals 5)
  40102b:	7e 07                	jle    401034 <func4+0x10>				   # jump gets skipped										# skip
  40102d:	89 f0                	mov    %esi,%eax						   # %eax = %esi // %eax = 4								# still 4 -> 3 -> 2 -> 1
  40102f:	83 ff 01             	cmp    $0x1,%edi						   # ZF = (%edi - 1) == 0 // ZF = 0							# eventually, edi = 1, now ZF = 1
																			   # SF = (%edi - 1) < 0 // SF = 0							# and SF still equals 0
																			   # CF, OF should both be 0								#
  401032:	75 02                	jne    401036 <func4+0x12>				   # first visit: jump to 401036							# fifth visit: don't jump
  401034:	f3 c3                	repz retq																							# 
  401036:	41 54                	push   %r12								   # %r12 = 0x400d00 // p sizeof($r12) -> 8					#
  401038:	55                   	push   %rbp																							#
  401039:	53                   	push   %rbx																							#			
  40103a:	41 89 f4             	mov    %esi,%r12d						   # %r12d = %esi // %r12d = 4								#
  40103d:	89 fb                	mov    %edi,%ebx						   # %ebx = %edi // %ebx = 6								#
  40103f:	8d 7f ff             	lea    -0x1(%rdi),%edi					   # %edi = (%rdi - 0x1) // %edi = (6 - 1) // %edi = 5		#
  401042:	e8 dd ff ff ff       	callq  401024 <func4>
  401047:	42 8d 2c 20          	lea    (%rax,%r12,1),%ebp
  40104b:	8d 7b fe             	lea    -0x2(%rbx),%edi
  40104e:	44 89 e6             	mov    %r12d,%esi
  401051:	e8 ce ff ff ff       	callq  401024 <func4>
  401056:	01 e8                	add    %ebp,%eax
  401058:	5b                   	pop    %rbx
  401059:	5d                   	pop    %rbp
  40105a:	41 5c                	pop    %r12
  40105c:	c3                   	retq   

000000000040105d <phase_4>:
  40105d:	48 83 ec 18          	sub    $0x18,%rsp						   # %rsp -= 0x18
  401061:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx					   # %rcx = %rsp + 0xc
  401066:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx					   # %rdx = %rsp + 0x8
  40106b:	be ed 27 40 00       	mov    $0x4027ed,%esi					   # %esi = 0x4027ed
  401070:	b8 00 00 00 00       	mov    $0x0,%eax						   # %eax = 0
  401075:	e8 e6 fb ff ff       	callq  400c60 <__isoc99_sscanf@plt>		   # %eax = number of args scanned
  40107a:	83 f8 02             	cmp    $0x2,%eax						   # you do want two args scanned
  40107d:	75 0c                	jne    40108b <phase_4+0x2e>			   # that way, you evade this
																			   # after this, %eax = 0x2 (2 args scanned, in this case)
  40107f:	8b 44 24 0c          	mov    0xc(%rsp),%eax					   # %eax = *(%rsp + 0xc) (points at the number 4 in the argument line)
  401083:	83 e8 02             	sub    $0x2,%eax						   # %eax -= 0x2
  401086:	83 f8 02             	cmp    $0x2,%eax						   # you want $eax to be equal to 2 or fewer-- solved by having the second argument be a 4.
  401089:	76 05                	jbe    401090 <phase_4+0x33>
																			   # jbe = jump if CF == 1 or ZF == 1
  40108b:	e8 39 05 00 00       	callq  4015c9 <explode_bomb>
  401090:	8b 74 24 0c          	mov    0xc(%rsp),%esi					   # %esi = *(%rsp + 0xc) // 4, right now
  401094:	bf 06 00 00 00       	mov    $0x6,%edi						   # %edi = 0x6
  401099:	e8 86 ff ff ff       	callq  401024 <func4>
																			   # p/x $eax -> 0x50 // x/x ($rsp + 0x8) -> 0x6
  40109e:	39 44 24 08          	cmp    %eax,0x8(%rsp)					   # from this, you want ZF = 1, so you want *(%rsp + 0x8) = %eax
  4010a2:	74 05                	je     4010a9 <phase_4+0x4c>			   # that way, you can use this jump to avoid the bomb
  4010a4:	e8 20 05 00 00       	callq  4015c9 <explode_bomb>			   # get yeeted lad
  4010a9:	48 83 c4 18          	add    $0x18,%rsp						   # %rsp += 0x18 (and sets some flags too)
  4010ad:	c3                   	retq   

00000000004010ae <phase_5>:
  4010ae:	48 83 ec 18          	sub    $0x18,%rsp						   # %rsp -= 0x18 // %rsp = 0x00007fffffffdf30
  4010b2:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx					   # %rcx = %rsp + 0x8 // %rcx = 0x00007fffffffdf38
  4010b7:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx					   # %rdx = %rsp + 0xc // %rdx = 0x00007fffffffdf3c
  4010bc:	be ed 27 40 00       	mov    $0x4027ed,%esi					   # %esi = 0x4027ed // format specifier is "%d %d", so sscanf will only read two numbers at most
  4010c1:	b8 00 00 00 00       	mov    $0x0,%eax						   # %eax = 0x0
  4010c6:	e8 95 fb ff ff       	callq  400c60 <__isoc99_sscanf@plt>		   # %eax = number of arguments scanned // for some reason it's = 2
  4010cb:	83 f8 01             	cmp    $0x1,%eax						   # so you want ZF = 0 and SF^OF = 0 as well
																			   # so you want SF = OF (either 0 or 1 is fine)
																			   # so you want (%eax - 0x1) != 0, so you want to scan 2 args
																			   # the SF and OF condition probably implies you should keep it safe  (2 args)
  4010ce:	7e 4a                	jle    40111a <phase_5+0x6c>			   # you don't want to trigger this jump
  4010d0:	8b 44 24 0c          	mov    0xc(%rsp),%eax					   # %eax = *(%rsp + 0xc) // %eax = the first argument in the line
  4010d4:	83 e0 0f             	and    $0xf,%eax						   # %eax &= 0xf (%eax = %eax & 0xf) // %eax = 1
  4010d7:	89 44 24 0c          	mov    %eax,0xc(%rsp)					   # *(%rsp + 0xc) = %eax // *(%rsp + 0xc) = 1
  4010db:	83 f8 0f             	cmp    $0xf,%eax						   # we want (%eax - 0xf) != 0 // it'll equal -14, so we're good
  4010de:	74 30                	je     401110 <phase_5+0x62>			   # we want to avoid this jump, so ZF should equal 0
  4010e0:	b9 00 00 00 00       	mov    $0x0,%ecx						   # %ecx = 0							# %ecx = 0
  4010e5:	ba 00 00 00 00       	mov    $0x0,%edx						   # %edx = 0							# %edx = 0

																			   # fuck's goin on in the loop lol
																			   # x/x (0x402560 + 4 * y) -> (y, result)
																			   # (0, 0xa)
																			   # (1, 0x2)
																			   # (2, 0xe)
																			   # (3, 0x7)
																			   # (4, 0x8)
																			   # (5, 0xc)
																			   # (6, 0xf)
																			   # (7, 0xb)
																			   # (8, 0x0)
																			   # (9, 0x4)
																			   # (10, 0x1)
																			   # (11, 0xd)
																			   # (12, 0x3)
																			   # (13, 0x9)
																			   # (14, 0x6)
																			   # (15, 0x5)
																			   # for y >= 16, we leave the array. i suspect we just go from [0, 15].

																			   # sub loop on the next line			# loop 1			# loop 2			# loop 3	# loop 4
  4010ea:	83 c2 01             	add    $0x1,%edx						   # %edx += 1							# %edx = 1			# %edx = 2			# %edx = 3	# %edx = 4
  4010ed:	48 98                	cltq									   # %rax = (int64_t)%eax				# %rax = 1			# %rax = 2			# %rax = 14	# %rax = 6
  4010ef:	8b 04 85 60 25 40 00 	mov    0x402560(,%rax,4),%eax			   # %eax = *(0x402560 + (4 * %rax))  	# %eax = 2			# $eax = 14			# %eax = 6	# $eax = 15
  4010f6:	01 c1                	add    %eax,%ecx						   # %ecx += %eax						# %ecx = 2			# $ecx = 16			# $ecx = 22 # %ecx = 37
  4010f8:	83 f8 0f             	cmp    $0xf,%eax						   # so you want %eax = 0xf to get out	# cmp sets ZF = 0	# ZF = 0			# ZF = 0	# ZF = 1
  4010fb:	75 ed                	jne    4010ea <phase_5+0x3c>			   # loop back							# loop back!		# loop back!		# ditto		# good god it worked


  AFTER THIS HELLISH LOOP IS DONE LOL:										   # %edx = 15, %rax = 15, $eax = 15, %ecx = 115
    rax 0x000000000000000f    rbx 0x00007fffffffe048       rcx 0x0000000000000073    rdx 0x000000000000000f    rsi 0x0000000000000000
    rdi 0x00007fffffffd8d0    rbp 0x00000000004022f0       rsp 0x00007fffffffdf40     r8 0x00007fffffffd8d1     r9 0x00000000ffffffff
    r10 0x0000000000000000    r11 0x000000000000000a       r12 0x0000000000400d00    r13 0x00007fffffffe040    r14 0x0000000000000000
    r15 0x0000000000000000    rip 0x00000000004010fd    eflags [ PF ZF IF ]           cs 0x00000033             ss 0x0000002b
     ds 0x00000000             es 0x00000000                fs 0x00000000             gs 0x00000000

  4010fd:	c7 44 24 0c 0f 00 00 	movl   $0xf,0xc(%rsp)					   # *(%rsp + 0xc) = 0xf				# *(0x7fffffffdf4c) = 0xf				# replaced 0x5 with 0xf
  401104:	00 
  401105:	83 fa 0f             	cmp    $0xf,%edx						   # you want ZF = 1 as a result, so you want %edx = 0xf						# so we want %edx to be 15, so we want the above loop to take 15 iterations
  401108:	75 06                	jne    401110 <phase_5+0x62>			   # this is a jump you want to avoid, so you want ZF = 1
  40110a:	39 4c 24 08          	cmp    %ecx,0x8(%rsp)					   # you want ZF = 1, so you want *(%rsp + 0x8) = %ecx
  40110e:	74 05                	je     401115 <phase_5+0x67>			   # this is a jump you do not want to avoid, so you want ZF = 1
  401110:	e8 b4 04 00 00       	callq  4015c9 <explode_bomb>
  401115:	48 83 c4 18          	add    $0x18,%rsp
  401119:	c3                   	retq   
  40111a:	e8 aa 04 00 00       	callq  4015c9 <explode_bomb>
  40111f:	eb af                	jmp    4010d0 <phase_5+0x22>

0000000000401121 <phase_6>:
																			   # Each of the following registers is 8 bytes in size.
																			   # %r14 = 0x0
																			   # %r13 = 0x7fffffffe040
																			   # %r12 = 0x400d00
																			   # %rbp = 0x4022f0
																			   # %rbx = 0x7fffffffe048
  401121:	41 56                	push   %r14								   # stores a bunch of things to %rsp
  401123:	41 55                	push   %r13
  401125:	41 54                	push   %r12
  401127:	55                   	push   %rbp
  401128:	53                   	push   %rbx
  401129:	48 83 ec 50          	sub    $0x50,%rsp						   # %rsp -= 0x50
  40112d:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi					   # %rsi = %rsp + 0x30 // rsi now points to the first argument
  401132:	e8 c8 04 00 00       	callq  4015ff <read_six_numbers>		   # oh god here we go again
  401137:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12					   # %r12 = %rsp + 0x30 // this will differ from %rsi
  40113c:	4d 89 e5             	mov    %r12,%r13						   # %r13 = %r12
  40113f:	41 be 00 00 00 00    	mov    $0x0,%r14d						   # %r14d = 0
  401145:	eb 26                	jmp    40116d <phase_6+0x4c>

  401147:	e8 7d 04 00 00       	callq  4015c9 <explode_bomb>
  40114c:	eb 2e                	jmp    40117c <phase_6+0x5b>
-------------------------------------------------------------------------------------------
																			   # Chunk 3
  40114e:	83 c3 01             	add    $0x1,%ebx						   # %ebx iterator/incrementer variable
  401151:	83 fb 05             	cmp    $0x5,%ebx
  401154:	7f 13                	jg     401169 <phase_6+0x48>			   # If you're on the sixth iteration, then force r13 to point to the next argument.
-------------------------------------------------------------------------------------------
																			   # Chunk 2																				# Loop 1
  401156:	48 63 c3             	movslq %ebx,%rax						   # %rax = (int64_t)*(int32_t *)%ebx										# 
  401159:	8b 44 84 30          	mov    0x30(%rsp,%rax,4),%eax			   # %eax = *(%rsp + 4 * %rax + 0x30)
																			   # worth noting: at this point, x/x ($rsp + 4 * ($rax + y - 2) + 0x30)
																			   # returns the yth argument on the fifth line of the text file
  40115d:	39 45 00             	cmp    %eax,0x0(%rbp)					   # we want ZF = 0, so *(%rbp) != %eax
  401160:	75 ec                	jne    40114e <phase_6+0x2d>			   # we want to jump here, so ZF = 0
-------------------------------------------------------------------------------------------
  401162:	e8 62 04 00 00       	callq  4015c9 <explode_bomb>
  401167:	eb e5                	jmp    40114e <phase_6+0x2d>

  401169:	49 83 c5 04          	add    $0x4,%r13
-------------------------------------------------------------------------------------------
																			   # Chunk 1 - loop starts here.
  40116d:	4c 89 ed             	mov    %r13,%rbp						   # %rbp = %r13 = %r12 = %rsp + 0x30 = memory location of first argument
  401170:	41 8b 45 00          	mov    0x0(%r13),%eax					   # %eax = *(%r13) = *(%rsp + 0x30) = first argument fr
  																			   # In the first iteration, %eax is the first argument.
  401174:	83 e8 01             	sub    $0x1,%eax						   # %eax -= 1
  401177:	83 f8 05             	cmp    $0x5,%eax						   # so we can have (CF, ZF) = (1, 0), (0, 1), (1, 1)
																			   # we want %eax <= 5
  40117a:	77 cb                	ja     401147 <phase_6+0x26>			   # this happens if ~CF & ~ZF == 1-- avoid it!
																			   # %r14d starts at zero
  40117c:	41 83 c6 01          	add    $0x1,%r14d						   # %r14d += 1
  401180:	41 83 fe 06          	cmp    $0x6,%r14d						   # 
																			   #
  401184:	74 05                	je     40118b <phase_6+0x6a>			   # Leave the loop if %r14d = 6.
  401186:	44 89 f3             	mov    %r14d,%ebx						   # %ebx = %r14d
  401189:	eb cb                	jmp    401156 <phase_6+0x35>			   # 
-------------------------------------------------------------------------------------------


																			   # replaces each parameter with 7 - x, where x is the particular parameter
  40118b:	49 8d 4c 24 18       	lea    0x18(%r12),%rcx					   # %rcx = %r12 + 0x18
  401190:	ba 07 00 00 00       	mov    $0x7,%edx						   # %edx = 0x7
  401195:	89 d0                	mov    %edx,%eax						   # %eax = %edx = 0x7
  401197:	41 2b 04 24          	sub    (%r12),%eax						   # %eax -= *(%r12) -> recall %r12 is the first argument
  40119b:	41 89 04 24          	mov    %eax,(%r12)						   # *(%r12) = %eax -> set the first argument to %eax
  40119f:	49 83 c4 04          	add    $0x4,%r12						   # %r12 += 0x4
  4011a3:	4c 39 e1             	cmp    %r12,%rcx						   # 
  4011a6:	75 ed                	jne    401195 <phase_6+0x74>			   # jump back if %rcx != %r12


  4011a8:	be 00 00 00 00       	mov    $0x0,%esi						   # %esi = 0x0
  4011ad:	eb 19                	jmp    4011c8 <phase_6+0xa7>			   # 



																			   # upper above chunk
  4011af:	48 8b 52 08          	mov    0x8(%rdx),%rdx					   # %rdx = *(%rdx + 0x8)
  4011b3:	83 c0 01             	add    $0x1,%eax						   # %eax += 0x1
  4011b6:	39 c8                	cmp    %ecx,%eax					
  4011b8:	75 f5                	jne    4011af <phase_6+0x8e>			   # if %eax != %ecx
																			   # lower above chunk
  4011ba:	48 89 14 f4          	mov    %rdx,(%rsp,%rsi,8)
  4011be:	48 83 c6 01          	add    $0x1,%rsi
  4011c2:	48 83 fe 06          	cmp    $0x6,%rsi
  4011c6:	74 15                	je     4011dd <phase_6+0xbc>


  4011c8:	8b 4c b4 30          	mov    0x30(%rsp,%rsi,4),%ecx			   # %ecx = *(0x30 + %rsp + 4 * %rsi)
  4011cc:	b8 01 00 00 00       	mov    $0x1,%eax						   # %eax = 1
  4011d1:	ba f0 42 60 00       	mov    $0x6042f0,%edx					   # %edx = 0x6042f0 (points to first node of linked list)
  4011d6:	83 f9 01             	cmp    $0x1,%ecx						   # %ecx = 0x1
  4011d9:	7f d4                	jg     4011af <phase_6+0x8e>			   # jump to upper above chunk if %ecx > 0x1
  4011db:	eb dd                	jmp    4011ba <phase_6+0x99>			   # else, jump to lower above chunk
  4011dd:	48 8b 1c 24          	mov    (%rsp),%rbx						   # %rbx = *(%rsp)
  4011e1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax					   # %rax = *(%rsp + 0x8)
  4011e6:	48 89 43 08          	mov    %rax,0x8(%rbx)					   # *(%rbx + 0x8) = %rax -> *(%rbx + 0x8) = *(%rsp + 0x8) -> *(*(%rsp) + 0x8) = *(%rsp + 0x8)
  4011ea:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx					   # %rdx = *(%rsp + 0x10)
  4011ef:	48 89 50 08          	mov    %rdx,0x8(%rax)					   # *(%rax + 0x8) = %rdx -> *(%rax + 0x8) = *(%rsp + 0x10) -> *(*(%rsp + 0x8) + 0x8) = *(%rsp + 0x10)

  4011f3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax					   # %rax = *(%rsp + 0x18)
  4011f8:	48 89 42 08          	mov    %rax,0x8(%rdx)					   # *(%rdx + 0x8) = %rax -> *(*(%rsp + 0x10) + 0x8) = *(%rsp + 0x18)
  4011fc:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx					   # %rdx = *(%rsp + 0x20) -> *(%rsp + 0x10) = *(%rsp + 0x20)
  401201:	48 89 50 08          	mov    %rdx,0x8(%rax)					   # *(%rax + 0x8) = %rdx -> *(*(%rsp + 0x18) + 0x8) = *(%rsp + 0x20)
  401205:	48 8b 44 24 28       	mov    0x28(%rsp),%rax					   # %rax = *(%rsp + 0x28) -> *(%rsp + 0x18) = *(%rsp + 0x28)
  40120a:	48 89 42 08          	mov    %rax,0x8(%rdx)					   # *(%rdx + 0x8) = %rax -> *(*(%rsp + 0x20) + 0x8) = *(%rsp + 0x28)
  40120e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)					   # *(%rax + 0x8) = 0 -> *(*(%rsp + 0x18) + 0x8) = 0
  401215:	00 
  401216:	bd 05 00 00 00       	mov    $0x5,%ebp						   # %ebp = 5
  40121b:	eb 09                	jmp    401226 <phase_6+0x105>			   # 

---------------------------------------------------------------------------------------------------------------------------------------
  40121d:	48 8b 5b 08          	mov    0x8(%rbx),%rbx					   # %rbx = *(%rbx + 0x8) -> move %rbx two nodes over
  401221:	83 ed 01             	sub    $0x1,%ebp						   # %ebp -= 0x1 -> 5 - 1


  401224:	74 11                	je     401237 <phase_6+0x116>			   # when %ebp = 1, get out
  401226:	48 8b 43 08          	mov    0x8(%rbx),%rax					   # %rax = *(%rbx + 0x8) -> *(%rsp + 0x28) = *(*(%rsp) + 0x8)
  40122a:	8b 00                	mov    (%rax),%eax						   # %eax = *(%rax) -> %eax = *(*(%rsp + 0x28))
																			   # %rbx points to a node, %eax = 0x24f, which is what %rax points to
  40122c:	39 03                	cmp    %eax,(%rbx)						   # you want *(%rbx) > %eax, which is 	*(*(%rsp)) > *(*(%rsp + 0x28))

																			   # the value of the node needs to be bigger than the value of the node 10 nodes away
  40122e:	7d ed                	jge    40121d <phase_6+0xfc>			   # if *(%rbx) > %eax, which is the same as
																			   # which is the same as
  401230:	e8 94 03 00 00       	callq  4015c9 <explode_bomb>
  401235:	eb e6                	jmp    40121d <phase_6+0xfc>
  401237:	48 83 c4 50          	add    $0x50,%rsp
  40123b:	5b                   	pop    %rbx
  40123c:	5d                   	pop    %rbp
  40123d:	41 5c                	pop    %r12
  40123f:	41 5d                	pop    %r13
  401241:	41 5e                	pop    %r14
  401243:	c3                   	retq   

0000000000401244 <fun7>:
  401244:	48 85 ff             	test   %rdi,%rdi
  401247:	74 34                	je     40127d <fun7+0x39>
  401249:	48 83 ec 08          	sub    $0x8,%rsp
  40124d:	8b 17                	mov    (%rdi),%edx
  40124f:	39 f2                	cmp    %esi,%edx
  401251:	7f 0e                	jg     401261 <fun7+0x1d>
  401253:	b8 00 00 00 00       	mov    $0x0,%eax
  401258:	39 f2                	cmp    %esi,%edx
  40125a:	75 12                	jne    40126e <fun7+0x2a>
  40125c:	48 83 c4 08          	add    $0x8,%rsp
  401260:	c3                   	retq   
  401261:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  401265:	e8 da ff ff ff       	callq  401244 <fun7>
  40126a:	01 c0                	add    %eax,%eax
  40126c:	eb ee                	jmp    40125c <fun7+0x18>
  40126e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
  401272:	e8 cd ff ff ff       	callq  401244 <fun7>
  401277:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
  40127b:	eb df                	jmp    40125c <fun7+0x18>
  40127d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401282:	c3                   	retq   

0000000000401283 <secret_phase>:
  401283:	53                   	push   %rbx
  401284:	e8 b5 03 00 00       	callq  40163e <read_line>
  401289:	ba 0a 00 00 00       	mov    $0xa,%edx
  40128e:	be 00 00 00 00       	mov    $0x0,%esi
  401293:	48 89 c7             	mov    %rax,%rdi
  401296:	e8 a5 f9 ff ff       	callq  400c40 <strtol@plt>
  40129b:	48 89 c3             	mov    %rax,%rbx
  40129e:	8d 40 ff             	lea    -0x1(%rax),%eax
  4012a1:	3d e8 03 00 00       	cmp    $0x3e8,%eax
  4012a6:	77 27                	ja     4012cf <secret_phase+0x4c>
  4012a8:	89 de                	mov    %ebx,%esi
  4012aa:	bf 10 41 60 00       	mov    $0x604110,%edi
  4012af:	e8 90 ff ff ff       	callq  401244 <fun7>
  4012b4:	83 f8 05             	cmp    $0x5,%eax
  4012b7:	74 05                	je     4012be <secret_phase+0x3b>
  4012b9:	e8 0b 03 00 00       	callq  4015c9 <explode_bomb>
  4012be:	bf f8 24 40 00       	mov    $0x4024f8,%edi
  4012c3:	e8 d8 f8 ff ff       	callq  400ba0 <puts@plt>
  4012c8:	e8 9f 04 00 00       	callq  40176c <phase_defused>
  4012cd:	5b                   	pop    %rbx
  4012ce:	c3                   	retq   
  4012cf:	e8 f5 02 00 00       	callq  4015c9 <explode_bomb>
  4012d4:	eb d2                	jmp    4012a8 <secret_phase+0x25>

00000000004012d6 <sig_handler>:
  4012d6:	48 83 ec 08          	sub    $0x8,%rsp
  4012da:	bf a0 25 40 00       	mov    $0x4025a0,%edi
  4012df:	e8 bc f8 ff ff       	callq  400ba0 <puts@plt>
  4012e4:	bf 03 00 00 00       	mov    $0x3,%edi
  4012e9:	e8 e2 f9 ff ff       	callq  400cd0 <sleep@plt>
  4012ee:	bf 69 27 40 00       	mov    $0x402769,%edi
  4012f3:	b8 00 00 00 00       	mov    $0x0,%eax
  4012f8:	e8 c3 f8 ff ff       	callq  400bc0 <printf@plt>
  4012fd:	48 8b 3d 7c 34 20 00 	mov    0x20347c(%rip),%rdi        # 604780 <stdout@@GLIBC_2.2.5>
  401304:	e8 47 f9 ff ff       	callq  400c50 <fflush@plt>
  401309:	bf 01 00 00 00       	mov    $0x1,%edi
  40130e:	e8 bd f9 ff ff       	callq  400cd0 <sleep@plt>
  401313:	bf 71 27 40 00       	mov    $0x402771,%edi
  401318:	e8 83 f8 ff ff       	callq  400ba0 <puts@plt>
  40131d:	bf 10 00 00 00       	mov    $0x10,%edi
  401322:	e8 89 f9 ff ff       	callq  400cb0 <exit@plt>

0000000000401327 <invalid_phase>:
  401327:	48 83 ec 08          	sub    $0x8,%rsp
  40132b:	48 89 fe             	mov    %rdi,%rsi
  40132e:	bf 79 27 40 00       	mov    $0x402779,%edi
  401333:	b8 00 00 00 00       	mov    $0x0,%eax
  401338:	e8 83 f8 ff ff       	callq  400bc0 <printf@plt>
  40133d:	bf 08 00 00 00       	mov    $0x8,%edi
  401342:	e8 69 f9 ff ff       	callq  400cb0 <exit@plt>

0000000000401347 <string_length>:
  401347:	80 3f 00             	cmpb   $0x0,(%rdi)
  40134a:	74 12                	je     40135e <string_length+0x17>
  40134c:	48 89 fa             	mov    %rdi,%rdx
  40134f:	48 83 c2 01          	add    $0x1,%rdx
  401353:	89 d0                	mov    %edx,%eax
  401355:	29 f8                	sub    %edi,%eax
  401357:	80 3a 00             	cmpb   $0x0,(%rdx)
  40135a:	75 f3                	jne    40134f <string_length+0x8>
  40135c:	f3 c3                	repz retq 
  40135e:	b8 00 00 00 00       	mov    $0x0,%eax
  401363:	c3                   	retq   

0000000000401364 <strings_not_equal>:
  401364:	41 54                	push   %r12
  401366:	55                   	push   %rbp
  401367:	53                   	push   %rbx
  401368:	48 89 fb             	mov    %rdi,%rbx
  40136b:	48 89 f5             	mov    %rsi,%rbp
  40136e:	e8 d4 ff ff ff       	callq  401347 <string_length>
  401373:	41 89 c4             	mov    %eax,%r12d
  401376:	48 89 ef             	mov    %rbp,%rdi
  401379:	e8 c9 ff ff ff       	callq  401347 <string_length>
  40137e:	ba 01 00 00 00       	mov    $0x1,%edx
  401383:	41 39 c4             	cmp    %eax,%r12d
  401386:	74 07                	je     40138f <strings_not_equal+0x2b>
  401388:	89 d0                	mov    %edx,%eax
  40138a:	5b                   	pop    %rbx
  40138b:	5d                   	pop    %rbp
  40138c:	41 5c                	pop    %r12
  40138e:	c3                   	retq   
  40138f:	0f b6 03             	movzbl (%rbx),%eax
  401392:	84 c0                	test   %al,%al
  401394:	74 27                	je     4013bd <strings_not_equal+0x59>
  401396:	3a 45 00             	cmp    0x0(%rbp),%al
  401399:	75 29                	jne    4013c4 <strings_not_equal+0x60>
  40139b:	48 83 c3 01          	add    $0x1,%rbx
  40139f:	48 83 c5 01          	add    $0x1,%rbp
  4013a3:	0f b6 03             	movzbl (%rbx),%eax
  4013a6:	84 c0                	test   %al,%al
  4013a8:	74 0c                	je     4013b6 <strings_not_equal+0x52>
  4013aa:	38 45 00             	cmp    %al,0x0(%rbp)
  4013ad:	74 ec                	je     40139b <strings_not_equal+0x37>
  4013af:	ba 01 00 00 00       	mov    $0x1,%edx
  4013b4:	eb d2                	jmp    401388 <strings_not_equal+0x24>
  4013b6:	ba 00 00 00 00       	mov    $0x0,%edx
  4013bb:	eb cb                	jmp    401388 <strings_not_equal+0x24>
  4013bd:	ba 00 00 00 00       	mov    $0x0,%edx
  4013c2:	eb c4                	jmp    401388 <strings_not_equal+0x24>
  4013c4:	ba 01 00 00 00       	mov    $0x1,%edx
  4013c9:	eb bd                	jmp    401388 <strings_not_equal+0x24>

00000000004013cb <initialize_bomb>:
  4013cb:	53                   	push   %rbx
  4013cc:	48 81 ec 40 20 00 00 	sub    $0x2040,%rsp
  4013d3:	be d6 12 40 00       	mov    $0x4012d6,%esi
  4013d8:	bf 02 00 00 00       	mov    $0x2,%edi
  4013dd:	e8 2e f8 ff ff       	callq  400c10 <signal@plt>
  4013e2:	be 40 00 00 00       	mov    $0x40,%esi
  4013e7:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
  4013ee:	00 
  4013ef:	e8 9c f8 ff ff       	callq  400c90 <gethostname@plt>
  4013f4:	85 c0                	test   %eax,%eax
  4013f6:	75 43                	jne    40143b <initialize_bomb+0x70>
  4013f8:	48 8b 3d 81 2f 20 00 	mov    0x202f81(%rip),%rdi        # 604380 <host_table>
  4013ff:	bb 88 43 60 00       	mov    $0x604388,%ebx
  401404:	48 85 ff             	test   %rdi,%rdi
  401407:	74 1e                	je     401427 <initialize_bomb+0x5c>
  401409:	48 8d b4 24 00 20 00 	lea    0x2000(%rsp),%rsi
  401410:	00 
  401411:	e8 5a f7 ff ff       	callq  400b70 <strcasecmp@plt>
  401416:	85 c0                	test   %eax,%eax
  401418:	74 51                	je     40146b <initialize_bomb+0xa0>
  40141a:	48 83 c3 08          	add    $0x8,%rbx
  40141e:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  401422:	48 85 ff             	test   %rdi,%rdi
  401425:	75 e2                	jne    401409 <initialize_bomb+0x3e>
  401427:	bf 10 26 40 00       	mov    $0x402610,%edi
  40142c:	e8 6f f7 ff ff       	callq  400ba0 <puts@plt>
  401431:	bf 08 00 00 00       	mov    $0x8,%edi
  401436:	e8 75 f8 ff ff       	callq  400cb0 <exit@plt>
  40143b:	bf d8 25 40 00       	mov    $0x4025d8,%edi
  401440:	e8 5b f7 ff ff       	callq  400ba0 <puts@plt>
  401445:	bf 08 00 00 00       	mov    $0x8,%edi
  40144a:	e8 61 f8 ff ff       	callq  400cb0 <exit@plt>
  40144f:	48 89 e6             	mov    %rsp,%rsi
  401452:	bf 8a 27 40 00       	mov    $0x40278a,%edi
  401457:	b8 00 00 00 00       	mov    $0x0,%eax
  40145c:	e8 5f f7 ff ff       	callq  400bc0 <printf@plt>
  401461:	bf 08 00 00 00       	mov    $0x8,%edi
  401466:	e8 45 f8 ff ff       	callq  400cb0 <exit@plt>
  40146b:	48 89 e7             	mov    %rsp,%rdi
  40146e:	e8 67 0c 00 00       	callq  4020da <init_driver>
  401473:	85 c0                	test   %eax,%eax
  401475:	78 d8                	js     40144f <initialize_bomb+0x84>
  401477:	48 81 c4 40 20 00 00 	add    $0x2040,%rsp
  40147e:	5b                   	pop    %rbx
  40147f:	c3                   	retq   

0000000000401480 <initialize_bomb_solve>:
  401480:	f3 c3                	repz retq 

0000000000401482 <blank_line>:
  401482:	55                   	push   %rbp
  401483:	53                   	push   %rbx
  401484:	48 83 ec 08          	sub    $0x8,%rsp
  401488:	48 89 fd             	mov    %rdi,%rbp
  40148b:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
  40148f:	84 db                	test   %bl,%bl
  401491:	74 1e                	je     4014b1 <blank_line+0x2f>
  401493:	e8 48 f8 ff ff       	callq  400ce0 <__ctype_b_loc@plt>
  401498:	48 83 c5 01          	add    $0x1,%rbp
  40149c:	48 0f be db          	movsbq %bl,%rbx
  4014a0:	48 8b 00             	mov    (%rax),%rax
  4014a3:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
  4014a8:	75 e1                	jne    40148b <blank_line+0x9>
  4014aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4014af:	eb 05                	jmp    4014b6 <blank_line+0x34>
  4014b1:	b8 01 00 00 00       	mov    $0x1,%eax
  4014b6:	48 83 c4 08          	add    $0x8,%rsp
  4014ba:	5b                   	pop    %rbx
  4014bb:	5d                   	pop    %rbp
  4014bc:	c3                   	retq   

00000000004014bd <skip>:
  4014bd:	53                   	push   %rbx
  4014be:	48 63 05 e7 32 20 00 	movslq 0x2032e7(%rip),%rax        # 6047ac <num_input_strings>
  4014c5:	48 8d 3c 80          	lea    (%rax,%rax,4),%rdi
  4014c9:	48 c1 e7 04          	shl    $0x4,%rdi
  4014cd:	48 81 c7 c0 47 60 00 	add    $0x6047c0,%rdi
  4014d4:	48 8b 15 d5 32 20 00 	mov    0x2032d5(%rip),%rdx        # 6047b0 <infile>
  4014db:	be 50 00 00 00       	mov    $0x50,%esi
  4014e0:	e8 1b f7 ff ff       	callq  400c00 <fgets@plt>
  4014e5:	48 89 c3             	mov    %rax,%rbx
  4014e8:	48 85 c0             	test   %rax,%rax
  4014eb:	74 0c                	je     4014f9 <skip+0x3c>
  4014ed:	48 89 c7             	mov    %rax,%rdi
  4014f0:	e8 8d ff ff ff       	callq  401482 <blank_line>
  4014f5:	85 c0                	test   %eax,%eax
  4014f7:	75 c5                	jne    4014be <skip+0x1>
  4014f9:	48 89 d8             	mov    %rbx,%rax
  4014fc:	5b                   	pop    %rbx
  4014fd:	c3                   	retq   

00000000004014fe <send_msg>:
  4014fe:	48 81 ec 08 40 00 00 	sub    $0x4008,%rsp
  401505:	89 fa                	mov    %edi,%edx
  401507:	44 8b 05 9e 32 20 00 	mov    0x20329e(%rip),%r8d        # 6047ac <num_input_strings>
  40150e:	41 8d 40 ff          	lea    -0x1(%r8),%eax
  401512:	48 98                	cltq   
  401514:	4c 8d 0c 80          	lea    (%rax,%rax,4),%r9
  401518:	49 c1 e1 04          	shl    $0x4,%r9
  40151c:	49 81 c1 c0 47 60 00 	add    $0x6047c0,%r9
  401523:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40152a:	b8 00 00 00 00       	mov    $0x0,%eax
  40152f:	4c 89 cf             	mov    %r9,%rdi
  401532:	f2 ae                	repnz scas %es:(%rdi),%al
  401534:	48 89 c8             	mov    %rcx,%rax
  401537:	48 f7 d0             	not    %rax
  40153a:	48 83 c0 63          	add    $0x63,%rax
  40153e:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  401544:	77 58                	ja     40159e <send_msg+0xa0>
  401546:	85 d2                	test   %edx,%edx
  401548:	b9 a4 27 40 00       	mov    $0x4027a4,%ecx
  40154d:	b8 ac 27 40 00       	mov    $0x4027ac,%eax
  401552:	48 0f 44 c8          	cmove  %rax,%rcx
  401556:	8b 15 10 2e 20 00    	mov    0x202e10(%rip),%edx        # 60436c <bomb_id>
  40155c:	be b5 27 40 00       	mov    $0x4027b5,%esi
  401561:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
  401568:	00 
  401569:	b8 00 00 00 00       	mov    $0x0,%eax
  40156e:	e8 2d f7 ff ff       	callq  400ca0 <sprintf@plt>
  401573:	49 89 e0             	mov    %rsp,%r8
  401576:	b9 00 00 00 00       	mov    $0x0,%ecx
  40157b:	48 8d 94 24 00 20 00 	lea    0x2000(%rsp),%rdx
  401582:	00 
  401583:	be 50 43 60 00       	mov    $0x604350,%esi
  401588:	bf 65 43 60 00       	mov    $0x604365,%edi
  40158d:	e8 ee 0c 00 00       	callq  402280 <driver_post>
  401592:	85 c0                	test   %eax,%eax
  401594:	78 21                	js     4015b7 <send_msg+0xb9>
  401596:	48 81 c4 08 40 00 00 	add    $0x4008,%rsp
  40159d:	c3                   	retq   
  40159e:	bf 48 26 40 00       	mov    $0x402648,%edi
  4015a3:	b8 00 00 00 00       	mov    $0x0,%eax
  4015a8:	e8 13 f6 ff ff       	callq  400bc0 <printf@plt>
  4015ad:	bf 08 00 00 00       	mov    $0x8,%edi
  4015b2:	e8 f9 f6 ff ff       	callq  400cb0 <exit@plt>
  4015b7:	48 89 e7             	mov    %rsp,%rdi
  4015ba:	e8 e1 f5 ff ff       	callq  400ba0 <puts@plt>
  4015bf:	bf 00 00 00 00       	mov    $0x0,%edi
  4015c4:	e8 e7 f6 ff ff       	callq  400cb0 <exit@plt>

00000000004015c9 <explode_bomb>:
  4015c9:	48 83 ec 08          	sub    $0x8,%rsp
  4015cd:	bf c1 27 40 00       	mov    $0x4027c1,%edi
  4015d2:	e8 c9 f5 ff ff       	callq  400ba0 <puts@plt>
  4015d7:	bf ca 27 40 00       	mov    $0x4027ca,%edi
  4015dc:	e8 bf f5 ff ff       	callq  400ba0 <puts@plt>
  4015e1:	bf 00 00 00 00       	mov    $0x0,%edi
  4015e6:	e8 13 ff ff ff       	callq  4014fe <send_msg>
  4015eb:	bf 70 26 40 00       	mov    $0x402670,%edi
  4015f0:	e8 ab f5 ff ff       	callq  400ba0 <puts@plt>
  4015f5:	bf 08 00 00 00       	mov    $0x8,%edi
  4015fa:	e8 b1 f6 ff ff       	callq  400cb0 <exit@plt>

00000000004015ff <read_six_numbers>:
  4015ff:	48 83 ec 08          	sub    $0x8,%rsp						   # %rsp -= 0x8
																			   # AFTER: %rsp = 0x00007fffffffdf00
       rax 0x0000000000604810           rbx 0x00007fffffffe038       rcx 0x000000000000000b       rdx 0x0000000000604810
       rsi 0x00007fffffffdf10           rdi 0x0000000000604810       rbp 0x00000000004022f0       rsp 0x00007fffffffdf00
        r8 0x00000000006068ac            r9 0x0000000000000000       r10 0x00007ffff7fc0500       r11 0x0000000000000246
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000401603        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000

  401603:	48 89 f2             	mov    %rsi,%rdx						   # %rdx = %rsi
																			   # AFTER: %rdx = 0x00007fffffffdf10
       rax 0x0000000000604810           rbx 0x00007fffffffe038       rcx 0x000000000000000b       rdx 0x00007fffffffdf10
       rsi 0x00007fffffffdf10           rdi 0x0000000000604810       rbp 0x00000000004022f0       rsp 0x00007fffffffdf00
        r8 0x00000000006068ac            r9 0x0000000000000000       r10 0x00007ffff7fc0500       r11 0x0000000000000246
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x0000000000401606        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000

  401606:	48 8d 4e 04          	lea    0x4(%rsi),%rcx					   # %rcx = %rsi + 0x4
																			   # AFTER: %rcx = 0x00007fffffffdf14

  40160a:	48 8d 46 14          	lea    0x14(%rsi),%rax					   # %rax = %rsi + 0x14
																			   # AFTER: $rax = 0x00007fffffffdf24
       rax 0x00007fffffffdf24           rbx 0x00007fffffffe038       rcx 0x00007fffffffdf14       rdx 0x00007fffffffdf10
       rsi 0x00007fffffffdf10           rdi 0x0000000000604810       rbp 0x00000000004022f0       rsp 0x00007fffffffdf00
        r8 0x00000000006068ac            r9 0x0000000000000000       r10 0x00007ffff7fc0500       r11 0x0000000000000246
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x000000000040160e        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000

  40160e:	50                   	push   %rax								   # %rsp -= sizeof(%rax)
																			   # *(%rsp) = %rax
																			   # AFTER:
																			   # print sizeof($rax) -> 8
																			   # %rsp = 0x00007fffffffdef8
																			   # x/s ($rsp) -> 0x7fffffffdef8: "$\337\377\377\377\177" 
																			   # *(%rsp) = "$\337\377\377\377\177"
       rax 0x00007fffffffdf24           rbx 0x00007fffffffe038       rcx 0x00007fffffffdf14       rdx 0x00007fffffffdf10
       rsi 0x00007fffffffdf10           rdi 0x0000000000604810       rbp 0x00000000004022f0       rsp 0x00007fffffffdef8
        r8 0x00000000006068ac            r9 0x0000000000000000       r10 0x00007ffff7fc0500       r11 0x0000000000000246
       r12 0x0000000000400d00           r13 0x00007fffffffe030       r14 0x0000000000000000       r15 0x0000000000000000
       rip 0x000000000040160f        eflags [ PF IF ]                 cs 0x00000033                ss 0x0000002b
        ds 0x00000000                    es 0x00000000                fs 0x00000000                gs 0x00000000

  40160f:	48 8d 46 10          	lea    0x10(%rsi),%rax					   # %rax = %rsi + 0x10
																			   # AFTER: %rax = 0x00007fffffffdf20

  401613:	50                   	push   %rax								   # %rsp -= sizeof(%rax)
																			   # *(%rsp) = %rax
																			   # AFTER: $rsp = 0x00007fffffffdef0
																			   # x/s ($rsp) -> 0x7fffffffdef0: " \337\377\377\377\177"
																			   # 

  401614:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9					   # %r9 = %rsi + 0xc
																			   # AFTER: %r9 = 0x7fffffffdf1c

  401618:	4c 8d 46 08          	lea    0x8(%rsi),%r8					   # %r8 = %rsi + 0x8
																			   # AFTER: %r8 = 0x7fffffffdf18

  40161c:	be e1 27 40 00       	mov    $0x4027e1,%esi					   # %esi = $0x4027e1
																			   # AFTER: %esi = ^^^

  401621:	b8 00 00 00 00       	mov    $0x0,%eax						   # %eax = 0x0
																			   

  401626:	e8 35 f6 ff ff       	callq  400c60 <__isoc99_sscanf@plt>		   # Scans from text file, result goes to %eax
																			   # AFTER: p/x $eax = 0x1 for some reason...
																			   # it's because eax is the number of args read

  40162b:	48 83 c4 10          	add    $0x10,%rsp						   # %rsp += 0x10
																			   # AFTER: %rsp = 0x00007fffffffdf00
  40162f:	83 f8 05             	cmp    $0x5,%eax						   # ZF = (%eax - 0x5) == 0, let's not have %eax = 5
																			   # SF = (%eax - 0x5) < 0
																			   # CF = unsigned carry?
																			   # OF = signed overflow?
  401632:	7e 05                	jle    401639 <read_six_numbers+0x3a>	   # %rip = 401639 if (SF ^ OF) | ZF == 1
																			   # so we want to avoid this thing being zero
																			   # Time to test all of these combos:
																			   # SF = 0, OF = 0, ZF = 0 -> 0
																			   # SF = 0, OF = 0, ZF = 1 -> 1
																			   # SF = 0, OF = 1, ZF = 0 -> 1
																			   # SF = 0, OF = 1, ZF = 1 -> 1
																			   # SF = 1, OF = 0, ZF = 0 -> 1
																			   # SF = 1, OF = 0, ZF = 1 -> 1
																			   # SF = 1, OF = 1, ZF = 0 -> 0
																			   # SF = 1, OF = 1, ZF = 1 -> 1

  401634:	48 83 c4 08          	add    $0x8,%rsp						   # %rsp += 0x8
																			   # AFTER: %rsp = 0x00007fffffffdf08
  401638:	c3                   	retq   
  401639:	e8 8b ff ff ff       	callq  4015c9 <explode_bomb>

000000000040163e <read_line>:
  40163e:	48 83 ec 08          	sub    $0x8,%rsp
  401642:	b8 00 00 00 00       	mov    $0x0,%eax
  401647:	e8 71 fe ff ff       	callq  4014bd <skip>
  40164c:	48 85 c0             	test   %rax,%rax
  40164f:	74 63                	je     4016b4 <read_line+0x76>
  401651:	8b 35 55 31 20 00    	mov    0x203155(%rip),%esi        # 6047ac <num_input_strings>
  401657:	48 63 c6             	movslq %esi,%rax
  40165a:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
  40165e:	48 c1 e2 04          	shl    $0x4,%rdx
  401662:	48 81 c2 c0 47 60 00 	add    $0x6047c0,%rdx
  401669:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401670:	b8 00 00 00 00       	mov    $0x0,%eax
  401675:	48 89 d7             	mov    %rdx,%rdi
  401678:	f2 ae                	repnz scas %es:(%rdi),%al
  40167a:	48 f7 d1             	not    %rcx
  40167d:	48 83 e9 01          	sub    $0x1,%rcx
  401681:	83 f9 4e             	cmp    $0x4e,%ecx
  401684:	0f 8f 9c 00 00 00    	jg     401726 <read_line+0xe8>
  40168a:	83 e9 01             	sub    $0x1,%ecx
  40168d:	48 63 c9             	movslq %ecx,%rcx
  401690:	48 63 c6             	movslq %esi,%rax
  401693:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401697:	48 c1 e0 04          	shl    $0x4,%rax
  40169b:	c6 84 01 c0 47 60 00 	movb   $0x0,0x6047c0(%rcx,%rax,1)
  4016a2:	00 
  4016a3:	8d 46 01             	lea    0x1(%rsi),%eax
  4016a6:	89 05 00 31 20 00    	mov    %eax,0x203100(%rip)        # 6047ac <num_input_strings>
  4016ac:	48 89 d0             	mov    %rdx,%rax
  4016af:	48 83 c4 08          	add    $0x8,%rsp
  4016b3:	c3                   	retq   
  4016b4:	48 8b 05 d5 30 20 00 	mov    0x2030d5(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  4016bb:	48 39 05 ee 30 20 00 	cmp    %rax,0x2030ee(%rip)        # 6047b0 <infile>
  4016c2:	74 19                	je     4016dd <read_line+0x9f>
  4016c4:	bf 11 28 40 00       	mov    $0x402811,%edi
  4016c9:	e8 92 f4 ff ff       	callq  400b60 <getenv@plt>
  4016ce:	48 85 c0             	test   %rax,%rax
  4016d1:	74 1e                	je     4016f1 <read_line+0xb3>
  4016d3:	bf 00 00 00 00       	mov    $0x0,%edi
  4016d8:	e8 d3 f5 ff ff       	callq  400cb0 <exit@plt>
  4016dd:	bf f3 27 40 00       	mov    $0x4027f3,%edi
  4016e2:	e8 b9 f4 ff ff       	callq  400ba0 <puts@plt>
  4016e7:	bf 08 00 00 00       	mov    $0x8,%edi
  4016ec:	e8 bf f5 ff ff       	callq  400cb0 <exit@plt>
  4016f1:	48 8b 05 98 30 20 00 	mov    0x203098(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  4016f8:	48 89 05 b1 30 20 00 	mov    %rax,0x2030b1(%rip)        # 6047b0 <infile>
  4016ff:	b8 00 00 00 00       	mov    $0x0,%eax
  401704:	e8 b4 fd ff ff       	callq  4014bd <skip>
  401709:	48 85 c0             	test   %rax,%rax
  40170c:	0f 85 3f ff ff ff    	jne    401651 <read_line+0x13>
  401712:	bf f3 27 40 00       	mov    $0x4027f3,%edi
  401717:	e8 84 f4 ff ff       	callq  400ba0 <puts@plt>
  40171c:	bf 00 00 00 00       	mov    $0x0,%edi
  401721:	e8 8a f5 ff ff       	callq  400cb0 <exit@plt>
  401726:	bf 1c 28 40 00       	mov    $0x40281c,%edi
  40172b:	e8 70 f4 ff ff       	callq  400ba0 <puts@plt>
  401730:	8b 05 76 30 20 00    	mov    0x203076(%rip),%eax        # 6047ac <num_input_strings>
  401736:	8d 50 01             	lea    0x1(%rax),%edx
  401739:	89 15 6d 30 20 00    	mov    %edx,0x20306d(%rip)        # 6047ac <num_input_strings>
  40173f:	48 98                	cltq   
  401741:	48 6b c0 50          	imul   $0x50,%rax,%rax
  401745:	48 be 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rsi
  40174c:	75 6e 63 
  40174f:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
  401756:	2a 2a 00 
  401759:	48 89 b0 c0 47 60 00 	mov    %rsi,0x6047c0(%rax)
  401760:	48 89 b8 c8 47 60 00 	mov    %rdi,0x6047c8(%rax)
  401767:	e8 5d fe ff ff       	callq  4015c9 <explode_bomb>

000000000040176c <phase_defused>:
  40176c:	48 83 ec 68          	sub    $0x68,%rsp
  401770:	bf 01 00 00 00       	mov    $0x1,%edi
  401775:	e8 84 fd ff ff       	callq  4014fe <send_msg>
  40177a:	83 3d 2b 30 20 00 05 	cmpl   $0x5,0x20302b(%rip)        # 6047ac <num_input_strings>
  401781:	74 05                	je     401788 <phase_defused+0x1c>
  401783:	48 83 c4 68          	add    $0x68,%rsp
  401787:	c3                   	retq   
  401788:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
  40178d:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  401792:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  401797:	be 37 28 40 00       	mov    $0x402837,%esi
  40179c:	bf b0 48 60 00       	mov    $0x6048b0,%edi
  4017a1:	b8 00 00 00 00       	mov    $0x0,%eax
  4017a6:	e8 b5 f4 ff ff       	callq  400c60 <__isoc99_sscanf@plt>
  4017ab:	83 f8 03             	cmp    $0x3,%eax
  4017ae:	74 16                	je     4017c6 <phase_defused+0x5a>
  4017b0:	bf f8 26 40 00       	mov    $0x4026f8,%edi
  4017b5:	e8 e6 f3 ff ff       	callq  400ba0 <puts@plt>
  4017ba:	bf 28 27 40 00       	mov    $0x402728,%edi
  4017bf:	e8 dc f3 ff ff       	callq  400ba0 <puts@plt>
  4017c4:	eb bd                	jmp    401783 <phase_defused+0x17>
  4017c6:	be 40 28 40 00       	mov    $0x402840,%esi
  4017cb:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  4017d0:	e8 8f fb ff ff       	callq  401364 <strings_not_equal>
  4017d5:	85 c0                	test   %eax,%eax
  4017d7:	75 d7                	jne    4017b0 <phase_defused+0x44>
  4017d9:	bf 98 26 40 00       	mov    $0x402698,%edi
  4017de:	e8 bd f3 ff ff       	callq  400ba0 <puts@plt>
  4017e3:	bf c0 26 40 00       	mov    $0x4026c0,%edi
  4017e8:	e8 b3 f3 ff ff       	callq  400ba0 <puts@plt>
  4017ed:	b8 00 00 00 00       	mov    $0x0,%eax
  4017f2:	e8 8c fa ff ff       	callq  401283 <secret_phase>
  4017f7:	eb b7                	jmp    4017b0 <phase_defused+0x44>

00000000004017f9 <sigalrm_handler>:
  4017f9:	48 83 ec 08          	sub    $0x8,%rsp
  4017fd:	ba 00 00 00 00       	mov    $0x0,%edx
  401802:	be 78 28 40 00       	mov    $0x402878,%esi
  401807:	48 8b 3d 92 2f 20 00 	mov    0x202f92(%rip),%rdi        # 6047a0 <stderr@@GLIBC_2.2.5>
  40180e:	b8 00 00 00 00       	mov    $0x0,%eax
  401813:	e8 18 f4 ff ff       	callq  400c30 <fprintf@plt>
  401818:	bf 01 00 00 00       	mov    $0x1,%edi
  40181d:	e8 8e f4 ff ff       	callq  400cb0 <exit@plt>

0000000000401822 <rio_readlineb>:
  401822:	41 56                	push   %r14
  401824:	41 55                	push   %r13
  401826:	41 54                	push   %r12
  401828:	55                   	push   %rbp
  401829:	53                   	push   %rbx
  40182a:	48 89 fb             	mov    %rdi,%rbx
  40182d:	49 89 f4             	mov    %rsi,%r12
  401830:	49 89 d6             	mov    %rdx,%r14
  401833:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  401839:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
  40183d:	48 83 fa 01          	cmp    $0x1,%rdx
  401841:	77 0c                	ja     40184f <rio_readlineb+0x2d>
  401843:	eb 60                	jmp    4018a5 <rio_readlineb+0x83>
  401845:	e8 36 f3 ff ff       	callq  400b80 <__errno_location@plt>
  40184a:	83 38 04             	cmpl   $0x4,(%rax)
  40184d:	75 67                	jne    4018b6 <rio_readlineb+0x94>
  40184f:	8b 43 04             	mov    0x4(%rbx),%eax
  401852:	85 c0                	test   %eax,%eax
  401854:	7f 20                	jg     401876 <rio_readlineb+0x54>
  401856:	ba 00 20 00 00       	mov    $0x2000,%edx
  40185b:	48 89 ee             	mov    %rbp,%rsi
  40185e:	8b 3b                	mov    (%rbx),%edi
  401860:	e8 8b f3 ff ff       	callq  400bf0 <read@plt>
  401865:	89 43 04             	mov    %eax,0x4(%rbx)
  401868:	85 c0                	test   %eax,%eax
  40186a:	78 d9                	js     401845 <rio_readlineb+0x23>
  40186c:	85 c0                	test   %eax,%eax
  40186e:	74 4f                	je     4018bf <rio_readlineb+0x9d>
  401870:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
  401874:	eb d9                	jmp    40184f <rio_readlineb+0x2d>
  401876:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  40187a:	0f b6 0a             	movzbl (%rdx),%ecx
  40187d:	48 83 c2 01          	add    $0x1,%rdx
  401881:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  401885:	83 e8 01             	sub    $0x1,%eax
  401888:	89 43 04             	mov    %eax,0x4(%rbx)
  40188b:	49 83 c4 01          	add    $0x1,%r12
  40188f:	41 88 4c 24 ff       	mov    %cl,-0x1(%r12)
  401894:	80 f9 0a             	cmp    $0xa,%cl
  401897:	74 0c                	je     4018a5 <rio_readlineb+0x83>
  401899:	41 83 c5 01          	add    $0x1,%r13d
  40189d:	49 63 c5             	movslq %r13d,%rax
  4018a0:	4c 39 f0             	cmp    %r14,%rax
  4018a3:	72 aa                	jb     40184f <rio_readlineb+0x2d>
  4018a5:	41 c6 04 24 00       	movb   $0x0,(%r12)
  4018aa:	49 63 c5             	movslq %r13d,%rax
  4018ad:	5b                   	pop    %rbx
  4018ae:	5d                   	pop    %rbp
  4018af:	41 5c                	pop    %r12
  4018b1:	41 5d                	pop    %r13
  4018b3:	41 5e                	pop    %r14
  4018b5:	c3                   	retq   
  4018b6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4018bd:	eb 05                	jmp    4018c4 <rio_readlineb+0xa2>
  4018bf:	b8 00 00 00 00       	mov    $0x0,%eax
  4018c4:	85 c0                	test   %eax,%eax
  4018c6:	75 0d                	jne    4018d5 <rio_readlineb+0xb3>
  4018c8:	b8 00 00 00 00       	mov    $0x0,%eax
  4018cd:	41 83 fd 01          	cmp    $0x1,%r13d
  4018d1:	75 d2                	jne    4018a5 <rio_readlineb+0x83>
  4018d3:	eb d8                	jmp    4018ad <rio_readlineb+0x8b>
  4018d5:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4018dc:	eb cf                	jmp    4018ad <rio_readlineb+0x8b>

00000000004018de <submitr>:
  4018de:	41 57                	push   %r15
  4018e0:	41 56                	push   %r14
  4018e2:	41 55                	push   %r13
  4018e4:	41 54                	push   %r12
  4018e6:	55                   	push   %rbp
  4018e7:	53                   	push   %rbx
  4018e8:	48 81 ec 68 a0 00 00 	sub    $0xa068,%rsp
  4018ef:	48 89 fd             	mov    %rdi,%rbp
  4018f2:	41 89 f5             	mov    %esi,%r13d
  4018f5:	48 89 14 24          	mov    %rdx,(%rsp)
  4018f9:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  4018fe:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  401903:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
  401908:	48 8b 9c 24 a0 a0 00 	mov    0xa0a0(%rsp),%rbx
  40190f:	00 
  401910:	4c 8b bc 24 a8 a0 00 	mov    0xa0a8(%rsp),%r15
  401917:	00 
  401918:	c7 84 24 3c 20 00 00 	movl   $0x0,0x203c(%rsp)
  40191f:	00 00 00 00 
  401923:	ba 00 00 00 00       	mov    $0x0,%edx
  401928:	be 01 00 00 00       	mov    $0x1,%esi
  40192d:	bf 02 00 00 00       	mov    $0x2,%edi
  401932:	e8 b9 f3 ff ff       	callq  400cf0 <socket@plt>
  401937:	85 c0                	test   %eax,%eax
  401939:	0f 88 28 01 00 00    	js     401a67 <submitr+0x189>
  40193f:	41 89 c4             	mov    %eax,%r12d
  401942:	48 89 ef             	mov    %rbp,%rdi
  401945:	e8 d6 f2 ff ff       	callq  400c20 <gethostbyname@plt>
  40194a:	48 85 c0             	test   %rax,%rax
  40194d:	0f 84 64 01 00 00    	je     401ab7 <submitr+0x1d9>
  401953:	48 c7 84 24 50 a0 00 	movq   $0x0,0xa050(%rsp)
  40195a:	00 00 00 00 00 
  40195f:	48 c7 84 24 58 a0 00 	movq   $0x0,0xa058(%rsp)
  401966:	00 00 00 00 00 
  40196b:	66 c7 84 24 50 a0 00 	movw   $0x2,0xa050(%rsp)
  401972:	00 02 00 
  401975:	48 63 50 14          	movslq 0x14(%rax),%rdx
  401979:	48 8d b4 24 54 a0 00 	lea    0xa054(%rsp),%rsi
  401980:	00 
  401981:	48 8b 40 18          	mov    0x18(%rax),%rax
  401985:	48 8b 38             	mov    (%rax),%rdi
  401988:	e8 e3 f2 ff ff       	callq  400c70 <bcopy@plt>
  40198d:	66 41 c1 cd 08       	ror    $0x8,%r13w
  401992:	66 44 89 ac 24 52 a0 	mov    %r13w,0xa052(%rsp)
  401999:	00 00 
  40199b:	ba 10 00 00 00       	mov    $0x10,%edx
  4019a0:	48 8d b4 24 50 a0 00 	lea    0xa050(%rsp),%rsi
  4019a7:	00 
  4019a8:	44 89 e7             	mov    %r12d,%edi
  4019ab:	e8 10 f3 ff ff       	callq  400cc0 <connect@plt>
  4019b0:	85 c0                	test   %eax,%eax
  4019b2:	0f 88 6a 01 00 00    	js     401b22 <submitr+0x244>
  4019b8:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
  4019bf:	b8 00 00 00 00       	mov    $0x0,%eax
  4019c4:	4c 89 c9             	mov    %r9,%rcx
  4019c7:	48 89 df             	mov    %rbx,%rdi
  4019ca:	f2 ae                	repnz scas %es:(%rdi),%al
  4019cc:	48 89 ce             	mov    %rcx,%rsi
  4019cf:	48 f7 d6             	not    %rsi
  4019d2:	4c 89 c9             	mov    %r9,%rcx
  4019d5:	48 8b 3c 24          	mov    (%rsp),%rdi
  4019d9:	f2 ae                	repnz scas %es:(%rdi),%al
  4019db:	49 89 c8             	mov    %rcx,%r8
  4019de:	4c 89 c9             	mov    %r9,%rcx
  4019e1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4019e6:	f2 ae                	repnz scas %es:(%rdi),%al
  4019e8:	48 f7 d1             	not    %rcx
  4019eb:	48 89 ca             	mov    %rcx,%rdx
  4019ee:	4c 89 c9             	mov    %r9,%rcx
  4019f1:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4019f6:	f2 ae                	repnz scas %es:(%rdi),%al
  4019f8:	4c 29 c2             	sub    %r8,%rdx
  4019fb:	48 29 ca             	sub    %rcx,%rdx
  4019fe:	48 8d 44 76 fd       	lea    -0x3(%rsi,%rsi,2),%rax
  401a03:	48 8d 44 02 7b       	lea    0x7b(%rdx,%rax,1),%rax
  401a08:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  401a0e:	0f 87 6b 01 00 00    	ja     401b7f <submitr+0x2a1>
  401a14:	48 8d 94 24 40 40 00 	lea    0x4040(%rsp),%rdx
  401a1b:	00 
  401a1c:	b9 00 04 00 00       	mov    $0x400,%ecx
  401a21:	b8 00 00 00 00       	mov    $0x0,%eax
  401a26:	48 89 d7             	mov    %rdx,%rdi
  401a29:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  401a2c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401a33:	48 89 df             	mov    %rbx,%rdi
  401a36:	f2 ae                	repnz scas %es:(%rdi),%al
  401a38:	48 89 ce             	mov    %rcx,%rsi
  401a3b:	48 f7 d6             	not    %rsi
  401a3e:	48 89 f1             	mov    %rsi,%rcx
  401a41:	48 83 e9 01          	sub    $0x1,%rcx
  401a45:	85 c9                	test   %ecx,%ecx
  401a47:	0f 84 eb 05 00 00    	je     402038 <submitr+0x75a>
  401a4d:	8d 41 ff             	lea    -0x1(%rcx),%eax
  401a50:	4c 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%r14
  401a55:	48 89 d5             	mov    %rdx,%rbp
  401a58:	49 bd d9 ff 00 00 00 	movabs $0x2000000000ffd9,%r13
  401a5f:	00 20 00 
  401a62:	e9 a5 01 00 00       	jmpq   401c0c <submitr+0x32e>
  401a67:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401a6e:	3a 20 43 
  401a71:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401a78:	20 75 6e 
  401a7b:	49 89 07             	mov    %rax,(%r15)
  401a7e:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401a82:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401a89:	74 6f 20 
  401a8c:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
  401a93:	65 20 73 
  401a96:	49 89 47 10          	mov    %rax,0x10(%r15)
  401a9a:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401a9e:	41 c7 47 20 6f 63 6b 	movl   $0x656b636f,0x20(%r15)
  401aa5:	65 
  401aa6:	66 41 c7 47 24 74 00 	movw   $0x74,0x24(%r15)
  401aad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ab2:	e9 6f 04 00 00       	jmpq   401f26 <submitr+0x648>
  401ab7:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  401abe:	3a 20 44 
  401ac1:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
  401ac8:	20 75 6e 
  401acb:	49 89 07             	mov    %rax,(%r15)
  401ace:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401ad2:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401ad9:	74 6f 20 
  401adc:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
  401ae3:	76 65 20 
  401ae6:	49 89 47 10          	mov    %rax,0x10(%r15)
  401aea:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401aee:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  401af5:	72 20 61 
  401af8:	49 89 47 20          	mov    %rax,0x20(%r15)
  401afc:	41 c7 47 28 64 64 72 	movl   $0x65726464,0x28(%r15)
  401b03:	65 
  401b04:	66 41 c7 47 2c 73 73 	movw   $0x7373,0x2c(%r15)
  401b0b:	41 c6 47 2e 00       	movb   $0x0,0x2e(%r15)
  401b10:	44 89 e7             	mov    %r12d,%edi
  401b13:	e8 c8 f0 ff ff       	callq  400be0 <close@plt>
  401b18:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401b1d:	e9 04 04 00 00       	jmpq   401f26 <submitr+0x648>
  401b22:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
  401b29:	3a 20 55 
  401b2c:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
  401b33:	20 74 6f 
  401b36:	49 89 07             	mov    %rax,(%r15)
  401b39:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401b3d:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
  401b44:	65 63 74 
  401b47:	48 ba 20 74 6f 20 74 	movabs $0x20656874206f7420,%rdx
  401b4e:	68 65 20 
  401b51:	49 89 47 10          	mov    %rax,0x10(%r15)
  401b55:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401b59:	41 c7 47 20 73 65 72 	movl   $0x76726573,0x20(%r15)
  401b60:	76 
  401b61:	66 41 c7 47 24 65 72 	movw   $0x7265,0x24(%r15)
  401b68:	41 c6 47 26 00       	movb   $0x0,0x26(%r15)
  401b6d:	44 89 e7             	mov    %r12d,%edi
  401b70:	e8 6b f0 ff ff       	callq  400be0 <close@plt>
  401b75:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401b7a:	e9 a7 03 00 00       	jmpq   401f26 <submitr+0x648>
  401b7f:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401b86:	3a 20 52 
  401b89:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
  401b90:	20 73 74 
  401b93:	49 89 07             	mov    %rax,(%r15)
  401b96:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401b9a:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
  401ba1:	74 6f 6f 
  401ba4:	48 ba 20 6c 61 72 67 	movabs $0x202e656772616c20,%rdx
  401bab:	65 2e 20 
  401bae:	49 89 47 10          	mov    %rax,0x10(%r15)
  401bb2:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401bb6:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
  401bbd:	61 73 65 
  401bc0:	48 ba 20 53 55 42 4d 	movabs $0x5254494d42555320,%rdx
  401bc7:	49 54 52 
  401bca:	49 89 47 20          	mov    %rax,0x20(%r15)
  401bce:	49 89 57 28          	mov    %rdx,0x28(%r15)
  401bd2:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
  401bd9:	55 46 00 
  401bdc:	49 89 47 30          	mov    %rax,0x30(%r15)
  401be0:	44 89 e7             	mov    %r12d,%edi
  401be3:	e8 f8 ef ff ff       	callq  400be0 <close@plt>
  401be8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401bed:	e9 34 03 00 00       	jmpq   401f26 <submitr+0x648>
  401bf2:	49 0f a3 d5          	bt     %rdx,%r13
  401bf6:	73 1f                	jae    401c17 <submitr+0x339>
  401bf8:	88 45 00             	mov    %al,0x0(%rbp)
  401bfb:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  401bff:	48 83 c3 01          	add    $0x1,%rbx
  401c03:	4c 39 f3             	cmp    %r14,%rbx
  401c06:	0f 84 2c 04 00 00    	je     402038 <submitr+0x75a>
  401c0c:	0f b6 03             	movzbl (%rbx),%eax
  401c0f:	8d 50 d6             	lea    -0x2a(%rax),%edx
  401c12:	80 fa 35             	cmp    $0x35,%dl
  401c15:	76 db                	jbe    401bf2 <submitr+0x314>
  401c17:	89 c2                	mov    %eax,%edx
  401c19:	83 e2 df             	and    $0xffffffdf,%edx
  401c1c:	83 ea 41             	sub    $0x41,%edx
  401c1f:	80 fa 19             	cmp    $0x19,%dl
  401c22:	76 d4                	jbe    401bf8 <submitr+0x31a>
  401c24:	3c 20                	cmp    $0x20,%al
  401c26:	74 45                	je     401c6d <submitr+0x38f>
  401c28:	8d 50 e0             	lea    -0x20(%rax),%edx
  401c2b:	80 fa 5f             	cmp    $0x5f,%dl
  401c2e:	76 08                	jbe    401c38 <submitr+0x35a>
  401c30:	3c 09                	cmp    $0x9,%al
  401c32:	0f 85 73 03 00 00    	jne    401fab <submitr+0x6cd>
  401c38:	0f b6 d0             	movzbl %al,%edx
  401c3b:	be 50 29 40 00       	mov    $0x402950,%esi
  401c40:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  401c45:	b8 00 00 00 00       	mov    $0x0,%eax
  401c4a:	e8 51 f0 ff ff       	callq  400ca0 <sprintf@plt>
  401c4f:	0f b6 44 24 28       	movzbl 0x28(%rsp),%eax
  401c54:	88 45 00             	mov    %al,0x0(%rbp)
  401c57:	0f b6 44 24 29       	movzbl 0x29(%rsp),%eax
  401c5c:	88 45 01             	mov    %al,0x1(%rbp)
  401c5f:	0f b6 44 24 2a       	movzbl 0x2a(%rsp),%eax
  401c64:	88 45 02             	mov    %al,0x2(%rbp)
  401c67:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
  401c6b:	eb 92                	jmp    401bff <submitr+0x321>
  401c6d:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
  401c71:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  401c75:	eb 88                	jmp    401bff <submitr+0x321>
  401c77:	49 01 c5             	add    %rax,%r13
  401c7a:	48 29 c5             	sub    %rax,%rbp
  401c7d:	74 26                	je     401ca5 <submitr+0x3c7>
  401c7f:	48 89 ea             	mov    %rbp,%rdx
  401c82:	4c 89 ee             	mov    %r13,%rsi
  401c85:	44 89 e7             	mov    %r12d,%edi
  401c88:	e8 23 ef ff ff       	callq  400bb0 <write@plt>
  401c8d:	48 85 c0             	test   %rax,%rax
  401c90:	7f e5                	jg     401c77 <submitr+0x399>
  401c92:	e8 e9 ee ff ff       	callq  400b80 <__errno_location@plt>
  401c97:	83 38 04             	cmpl   $0x4,(%rax)
  401c9a:	0f 85 3b 01 00 00    	jne    401ddb <submitr+0x4fd>
  401ca0:	4c 89 f0             	mov    %r14,%rax
  401ca3:	eb d2                	jmp    401c77 <submitr+0x399>
  401ca5:	48 85 db             	test   %rbx,%rbx
  401ca8:	0f 88 2d 01 00 00    	js     401ddb <submitr+0x4fd>
  401cae:	44 89 a4 24 40 80 00 	mov    %r12d,0x8040(%rsp)
  401cb5:	00 
  401cb6:	c7 84 24 44 80 00 00 	movl   $0x0,0x8044(%rsp)
  401cbd:	00 00 00 00 
  401cc1:	48 8d 84 24 50 80 00 	lea    0x8050(%rsp),%rax
  401cc8:	00 
  401cc9:	48 89 84 24 48 80 00 	mov    %rax,0x8048(%rsp)
  401cd0:	00 
  401cd1:	ba 00 20 00 00       	mov    $0x2000,%edx
  401cd6:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
  401cdd:	00 
  401cde:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  401ce5:	00 
  401ce6:	e8 37 fb ff ff       	callq  401822 <rio_readlineb>
  401ceb:	48 85 c0             	test   %rax,%rax
  401cee:	0f 8e 46 01 00 00    	jle    401e3a <submitr+0x55c>
  401cf4:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
  401cf9:	48 8d 8c 24 3c 20 00 	lea    0x203c(%rsp),%rcx
  401d00:	00 
  401d01:	48 8d 94 24 40 20 00 	lea    0x2040(%rsp),%rdx
  401d08:	00 
  401d09:	be 57 29 40 00       	mov    $0x402957,%esi
  401d0e:	48 8d bc 24 40 60 00 	lea    0x6040(%rsp),%rdi
  401d15:	00 
  401d16:	b8 00 00 00 00       	mov    $0x0,%eax
  401d1b:	e8 40 ef ff ff       	callq  400c60 <__isoc99_sscanf@plt>
  401d20:	8b 94 24 3c 20 00 00 	mov    0x203c(%rsp),%edx
  401d27:	81 fa c8 00 00 00    	cmp    $0xc8,%edx
  401d2d:	0f 85 78 01 00 00    	jne    401eab <submitr+0x5cd>
  401d33:	48 8d 9c 24 40 60 00 	lea    0x6040(%rsp),%rbx
  401d3a:	00 
  401d3b:	bf 68 29 40 00       	mov    $0x402968,%edi
  401d40:	b9 03 00 00 00       	mov    $0x3,%ecx
  401d45:	48 89 de             	mov    %rbx,%rsi
  401d48:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  401d4a:	0f 97 c0             	seta   %al
  401d4d:	1c 00                	sbb    $0x0,%al
  401d4f:	84 c0                	test   %al,%al
  401d51:	0f 84 7a 01 00 00    	je     401ed1 <submitr+0x5f3>
  401d57:	ba 00 20 00 00       	mov    $0x2000,%edx
  401d5c:	48 89 de             	mov    %rbx,%rsi
  401d5f:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  401d66:	00 
  401d67:	e8 b6 fa ff ff       	callq  401822 <rio_readlineb>
  401d6c:	48 85 c0             	test   %rax,%rax
  401d6f:	7f ca                	jg     401d3b <submitr+0x45d>
  401d71:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401d78:	3a 20 43 
  401d7b:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401d82:	20 75 6e 
  401d85:	49 89 07             	mov    %rax,(%r15)
  401d88:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401d8c:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401d93:	74 6f 20 
  401d96:	48 ba 72 65 61 64 20 	movabs $0x6165682064616572,%rdx
  401d9d:	68 65 61 
  401da0:	49 89 47 10          	mov    %rax,0x10(%r15)
  401da4:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401da8:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
  401daf:	66 72 6f 
  401db2:	48 ba 6d 20 73 65 72 	movabs $0x726576726573206d,%rdx
  401db9:	76 65 72 
  401dbc:	49 89 47 20          	mov    %rax,0x20(%r15)
  401dc0:	49 89 57 28          	mov    %rdx,0x28(%r15)
  401dc4:	41 c6 47 30 00       	movb   $0x0,0x30(%r15)
  401dc9:	44 89 e7             	mov    %r12d,%edi
  401dcc:	e8 0f ee ff ff       	callq  400be0 <close@plt>
  401dd1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401dd6:	e9 4b 01 00 00       	jmpq   401f26 <submitr+0x648>
  401ddb:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401de2:	3a 20 43 
  401de5:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401dec:	20 75 6e 
  401def:	49 89 07             	mov    %rax,(%r15)
  401df2:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401df6:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401dfd:	74 6f 20 
  401e00:	48 ba 77 72 69 74 65 	movabs $0x6f74206574697277,%rdx
  401e07:	20 74 6f 
  401e0a:	49 89 47 10          	mov    %rax,0x10(%r15)
  401e0e:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401e12:	48 b8 20 74 68 65 20 	movabs $0x7265732065687420,%rax
  401e19:	73 65 72 
  401e1c:	49 89 47 20          	mov    %rax,0x20(%r15)
  401e20:	41 c7 47 28 76 65 72 	movl   $0x726576,0x28(%r15)
  401e27:	00 
  401e28:	44 89 e7             	mov    %r12d,%edi
  401e2b:	e8 b0 ed ff ff       	callq  400be0 <close@plt>
  401e30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401e35:	e9 ec 00 00 00       	jmpq   401f26 <submitr+0x648>
  401e3a:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401e41:	3a 20 43 
  401e44:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401e4b:	20 75 6e 
  401e4e:	49 89 07             	mov    %rax,(%r15)
  401e51:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401e55:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401e5c:	74 6f 20 
  401e5f:	48 ba 72 65 61 64 20 	movabs $0x7269662064616572,%rdx
  401e66:	66 69 72 
  401e69:	49 89 47 10          	mov    %rax,0x10(%r15)
  401e6d:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401e71:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
  401e78:	61 64 65 
  401e7b:	48 ba 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rdx
  401e82:	6d 20 73 
  401e85:	49 89 47 20          	mov    %rax,0x20(%r15)
  401e89:	49 89 57 28          	mov    %rdx,0x28(%r15)
  401e8d:	41 c7 47 30 65 72 76 	movl   $0x65767265,0x30(%r15)
  401e94:	65 
  401e95:	66 41 c7 47 34 72 00 	movw   $0x72,0x34(%r15)
  401e9c:	44 89 e7             	mov    %r12d,%edi
  401e9f:	e8 3c ed ff ff       	callq  400be0 <close@plt>
  401ea4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ea9:	eb 7b                	jmp    401f26 <submitr+0x648>
  401eab:	48 8d 4c 24 30       	lea    0x30(%rsp),%rcx
  401eb0:	be a0 28 40 00       	mov    $0x4028a0,%esi
  401eb5:	4c 89 ff             	mov    %r15,%rdi
  401eb8:	b8 00 00 00 00       	mov    $0x0,%eax
  401ebd:	e8 de ed ff ff       	callq  400ca0 <sprintf@plt>
  401ec2:	44 89 e7             	mov    %r12d,%edi
  401ec5:	e8 16 ed ff ff       	callq  400be0 <close@plt>
  401eca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ecf:	eb 55                	jmp    401f26 <submitr+0x648>
  401ed1:	ba 00 20 00 00       	mov    $0x2000,%edx
  401ed6:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
  401edd:	00 
  401ede:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  401ee5:	00 
  401ee6:	e8 37 f9 ff ff       	callq  401822 <rio_readlineb>
  401eeb:	48 85 c0             	test   %rax,%rax
  401eee:	7e 48                	jle    401f38 <submitr+0x65a>
  401ef0:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
  401ef7:	00 
  401ef8:	4c 89 ff             	mov    %r15,%rdi
  401efb:	e8 90 ec ff ff       	callq  400b90 <strcpy@plt>
  401f00:	44 89 e7             	mov    %r12d,%edi
  401f03:	e8 d8 ec ff ff       	callq  400be0 <close@plt>
  401f08:	bf 6b 29 40 00       	mov    $0x40296b,%edi
  401f0d:	b9 03 00 00 00       	mov    $0x3,%ecx
  401f12:	4c 89 fe             	mov    %r15,%rsi
  401f15:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  401f17:	0f 97 c0             	seta   %al
  401f1a:	1c 00                	sbb    $0x0,%al
  401f1c:	84 c0                	test   %al,%al
  401f1e:	0f 95 c0             	setne  %al
  401f21:	0f b6 c0             	movzbl %al,%eax
  401f24:	f7 d8                	neg    %eax
  401f26:	48 81 c4 68 a0 00 00 	add    $0xa068,%rsp
  401f2d:	5b                   	pop    %rbx
  401f2e:	5d                   	pop    %rbp
  401f2f:	41 5c                	pop    %r12
  401f31:	41 5d                	pop    %r13
  401f33:	41 5e                	pop    %r14
  401f35:	41 5f                	pop    %r15
  401f37:	c3                   	retq   
  401f38:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401f3f:	3a 20 43 
  401f42:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401f49:	20 75 6e 
  401f4c:	49 89 07             	mov    %rax,(%r15)
  401f4f:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401f53:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401f5a:	74 6f 20 
  401f5d:	48 ba 72 65 61 64 20 	movabs $0x6174732064616572,%rdx
  401f64:	73 74 61 
  401f67:	49 89 47 10          	mov    %rax,0x10(%r15)
  401f6b:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401f6f:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
  401f76:	65 73 73 
  401f79:	48 ba 61 67 65 20 66 	movabs $0x6d6f726620656761,%rdx
  401f80:	72 6f 6d 
  401f83:	49 89 47 20          	mov    %rax,0x20(%r15)
  401f87:	49 89 57 28          	mov    %rdx,0x28(%r15)
  401f8b:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
  401f92:	65 72 00 
  401f95:	49 89 47 30          	mov    %rax,0x30(%r15)
  401f99:	44 89 e7             	mov    %r12d,%edi
  401f9c:	e8 3f ec ff ff       	callq  400be0 <close@plt>
  401fa1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401fa6:	e9 7b ff ff ff       	jmpq   401f26 <submitr+0x648>
  401fab:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401fb2:	3a 20 52 
  401fb5:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
  401fbc:	20 73 74 
  401fbf:	49 89 07             	mov    %rax,(%r15)
  401fc2:	49 89 57 08          	mov    %rdx,0x8(%r15)
  401fc6:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
  401fcd:	63 6f 6e 
  401fd0:	48 ba 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rdx
  401fd7:	20 61 6e 
  401fda:	49 89 47 10          	mov    %rax,0x10(%r15)
  401fde:	49 89 57 18          	mov    %rdx,0x18(%r15)
  401fe2:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
  401fe9:	67 61 6c 
  401fec:	48 ba 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rdx
  401ff3:	6e 70 72 
  401ff6:	49 89 47 20          	mov    %rax,0x20(%r15)
  401ffa:	49 89 57 28          	mov    %rdx,0x28(%r15)
  401ffe:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
  402005:	6c 65 20 
  402008:	48 ba 63 68 61 72 61 	movabs $0x6574636172616863,%rdx
  40200f:	63 74 65 
  402012:	49 89 47 30          	mov    %rax,0x30(%r15)
  402016:	49 89 57 38          	mov    %rdx,0x38(%r15)
  40201a:	66 41 c7 47 40 72 2e 	movw   $0x2e72,0x40(%r15)
  402021:	41 c6 47 42 00       	movb   $0x0,0x42(%r15)
  402026:	44 89 e7             	mov    %r12d,%edi
  402029:	e8 b2 eb ff ff       	callq  400be0 <close@plt>
  40202e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402033:	e9 ee fe ff ff       	jmpq   401f26 <submitr+0x648>
  402038:	48 8d 9c 24 40 60 00 	lea    0x6040(%rsp),%rbx
  40203f:	00 
  402040:	48 83 ec 08          	sub    $0x8,%rsp
  402044:	48 8d 84 24 48 40 00 	lea    0x4048(%rsp),%rax
  40204b:	00 
  40204c:	50                   	push   %rax
  40204d:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
  402052:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402057:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40205c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  402061:	be d0 28 40 00       	mov    $0x4028d0,%esi
  402066:	48 89 df             	mov    %rbx,%rdi
  402069:	b8 00 00 00 00       	mov    $0x0,%eax
  40206e:	e8 2d ec ff ff       	callq  400ca0 <sprintf@plt>
  402073:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40207a:	b8 00 00 00 00       	mov    $0x0,%eax
  40207f:	48 89 df             	mov    %rbx,%rdi
  402082:	f2 ae                	repnz scas %es:(%rdi),%al
  402084:	48 f7 d1             	not    %rcx
  402087:	48 89 cb             	mov    %rcx,%rbx
  40208a:	48 83 eb 01          	sub    $0x1,%rbx
  40208e:	48 83 c4 10          	add    $0x10,%rsp
  402092:	48 89 dd             	mov    %rbx,%rbp
  402095:	4c 8d ac 24 40 60 00 	lea    0x6040(%rsp),%r13
  40209c:	00 
  40209d:	41 be 00 00 00 00    	mov    $0x0,%r14d
  4020a3:	48 85 db             	test   %rbx,%rbx
  4020a6:	0f 85 d3 fb ff ff    	jne    401c7f <submitr+0x3a1>
  4020ac:	e9 fd fb ff ff       	jmpq   401cae <submitr+0x3d0>

00000000004020b1 <init_timeout>:
  4020b1:	85 ff                	test   %edi,%edi
  4020b3:	74 23                	je     4020d8 <init_timeout+0x27>
  4020b5:	53                   	push   %rbx
  4020b6:	89 fb                	mov    %edi,%ebx
  4020b8:	be f9 17 40 00       	mov    $0x4017f9,%esi
  4020bd:	bf 0e 00 00 00       	mov    $0xe,%edi
  4020c2:	e8 49 eb ff ff       	callq  400c10 <signal@plt>
  4020c7:	85 db                	test   %ebx,%ebx
  4020c9:	bf 00 00 00 00       	mov    $0x0,%edi
  4020ce:	0f 49 fb             	cmovns %ebx,%edi
  4020d1:	e8 fa ea ff ff       	callq  400bd0 <alarm@plt>
  4020d6:	5b                   	pop    %rbx
  4020d7:	c3                   	retq   
  4020d8:	f3 c3                	repz retq 

00000000004020da <init_driver>:
  4020da:	55                   	push   %rbp
  4020db:	53                   	push   %rbx
  4020dc:	48 83 ec 18          	sub    $0x18,%rsp
  4020e0:	48 89 fd             	mov    %rdi,%rbp
  4020e3:	be 01 00 00 00       	mov    $0x1,%esi
  4020e8:	bf 0d 00 00 00       	mov    $0xd,%edi
  4020ed:	e8 1e eb ff ff       	callq  400c10 <signal@plt>
  4020f2:	be 01 00 00 00       	mov    $0x1,%esi
  4020f7:	bf 1d 00 00 00       	mov    $0x1d,%edi
  4020fc:	e8 0f eb ff ff       	callq  400c10 <signal@plt>
  402101:	be 01 00 00 00       	mov    $0x1,%esi
  402106:	bf 1d 00 00 00       	mov    $0x1d,%edi
  40210b:	e8 00 eb ff ff       	callq  400c10 <signal@plt>
  402110:	ba 00 00 00 00       	mov    $0x0,%edx
  402115:	be 01 00 00 00       	mov    $0x1,%esi
  40211a:	bf 02 00 00 00       	mov    $0x2,%edi
  40211f:	e8 cc eb ff ff       	callq  400cf0 <socket@plt>
  402124:	85 c0                	test   %eax,%eax
  402126:	78 7c                	js     4021a4 <init_driver+0xca>
  402128:	89 c3                	mov    %eax,%ebx
  40212a:	bf 47 28 40 00       	mov    $0x402847,%edi
  40212f:	e8 ec ea ff ff       	callq  400c20 <gethostbyname@plt>
  402134:	48 85 c0             	test   %rax,%rax
  402137:	0f 84 b3 00 00 00    	je     4021f0 <init_driver+0x116>
  40213d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  402144:	00 
  402145:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  40214c:	00 00 
  40214e:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
  402154:	48 63 50 14          	movslq 0x14(%rax),%rdx
  402158:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
  40215d:	48 8b 40 18          	mov    0x18(%rax),%rax
  402161:	48 8b 38             	mov    (%rax),%rdi
  402164:	e8 07 eb ff ff       	callq  400c70 <bcopy@plt>
  402169:	66 c7 44 24 02 5e b5 	movw   $0xb55e,0x2(%rsp)
  402170:	ba 10 00 00 00       	mov    $0x10,%edx
  402175:	48 89 e6             	mov    %rsp,%rsi
  402178:	89 df                	mov    %ebx,%edi
  40217a:	e8 41 eb ff ff       	callq  400cc0 <connect@plt>
  40217f:	85 c0                	test   %eax,%eax
  402181:	0f 88 d1 00 00 00    	js     402258 <init_driver+0x17e>
  402187:	89 df                	mov    %ebx,%edi
  402189:	e8 52 ea ff ff       	callq  400be0 <close@plt>
  40218e:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
  402194:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
  402198:	b8 00 00 00 00       	mov    $0x0,%eax
  40219d:	48 83 c4 18          	add    $0x18,%rsp
  4021a1:	5b                   	pop    %rbx
  4021a2:	5d                   	pop    %rbp
  4021a3:	c3                   	retq   
  4021a4:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  4021ab:	3a 20 43 
  4021ae:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  4021b5:	20 75 6e 
  4021b8:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4021bc:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  4021c0:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  4021c7:	74 6f 20 
  4021ca:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
  4021d1:	65 20 73 
  4021d4:	48 89 45 10          	mov    %rax,0x10(%rbp)
  4021d8:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  4021dc:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  4021e3:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
  4021e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4021ee:	eb ad                	jmp    40219d <init_driver+0xc3>
  4021f0:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  4021f7:	3a 20 44 
  4021fa:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
  402201:	20 75 6e 
  402204:	48 89 45 00          	mov    %rax,0x0(%rbp)
  402208:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  40220c:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402213:	74 6f 20 
  402216:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
  40221d:	76 65 20 
  402220:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402224:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  402228:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  40222f:	72 20 61 
  402232:	48 89 45 20          	mov    %rax,0x20(%rbp)
  402236:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  40223d:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
  402243:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  402247:	89 df                	mov    %ebx,%edi
  402249:	e8 92 e9 ff ff       	callq  400be0 <close@plt>
  40224e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402253:	e9 45 ff ff ff       	jmpq   40219d <init_driver+0xc3>
  402258:	ba 47 28 40 00       	mov    $0x402847,%edx
  40225d:	be 28 29 40 00       	mov    $0x402928,%esi
  402262:	48 89 ef             	mov    %rbp,%rdi
  402265:	b8 00 00 00 00       	mov    $0x0,%eax
  40226a:	e8 31 ea ff ff       	callq  400ca0 <sprintf@plt>
  40226f:	89 df                	mov    %ebx,%edi
  402271:	e8 6a e9 ff ff       	callq  400be0 <close@plt>
  402276:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40227b:	e9 1d ff ff ff       	jmpq   40219d <init_driver+0xc3>

0000000000402280 <driver_post>:
  402280:	53                   	push   %rbx
  402281:	4c 89 c3             	mov    %r8,%rbx
  402284:	85 c9                	test   %ecx,%ecx
  402286:	75 17                	jne    40229f <driver_post+0x1f>
  402288:	48 85 ff             	test   %rdi,%rdi
  40228b:	74 05                	je     402292 <driver_post+0x12>
  40228d:	80 3f 00             	cmpb   $0x0,(%rdi)
  402290:	75 2f                	jne    4022c1 <driver_post+0x41>
  402292:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  402297:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  40229b:	89 c8                	mov    %ecx,%eax
  40229d:	5b                   	pop    %rbx
  40229e:	c3                   	retq   
  40229f:	48 89 d6             	mov    %rdx,%rsi
  4022a2:	bf 6e 29 40 00       	mov    $0x40296e,%edi
  4022a7:	b8 00 00 00 00       	mov    $0x0,%eax
  4022ac:	e8 0f e9 ff ff       	callq  400bc0 <printf@plt>
  4022b1:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  4022b6:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  4022ba:	b8 00 00 00 00       	mov    $0x0,%eax
  4022bf:	eb dc                	jmp    40229d <driver_post+0x1d>
  4022c1:	41 50                	push   %r8
  4022c3:	52                   	push   %rdx
  4022c4:	41 b9 85 29 40 00    	mov    $0x402985,%r9d
  4022ca:	49 89 f0             	mov    %rsi,%r8
  4022cd:	48 89 f9             	mov    %rdi,%rcx
  4022d0:	ba 8a 29 40 00       	mov    $0x40298a,%edx
  4022d5:	be b5 5e 00 00       	mov    $0x5eb5,%esi
  4022da:	bf 47 28 40 00       	mov    $0x402847,%edi
  4022df:	e8 fa f5 ff ff       	callq  4018de <submitr>
  4022e4:	48 83 c4 10          	add    $0x10,%rsp
  4022e8:	eb b3                	jmp    40229d <driver_post+0x1d>
  4022ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004022f0 <__libc_csu_init>:
  4022f0:	41 57                	push   %r15
  4022f2:	41 56                	push   %r14
  4022f4:	49 89 d7             	mov    %rdx,%r15
  4022f7:	41 55                	push   %r13
  4022f9:	41 54                	push   %r12
  4022fb:	4c 8d 25 fe 1a 20 00 	lea    0x201afe(%rip),%r12        # 603e00 <__frame_dummy_init_array_entry>
  402302:	55                   	push   %rbp
  402303:	48 8d 2d fe 1a 20 00 	lea    0x201afe(%rip),%rbp        # 603e08 <__init_array_end>
  40230a:	53                   	push   %rbx
  40230b:	41 89 fd             	mov    %edi,%r13d
  40230e:	49 89 f6             	mov    %rsi,%r14
  402311:	4c 29 e5             	sub    %r12,%rbp
  402314:	48 83 ec 08          	sub    $0x8,%rsp
  402318:	48 c1 fd 03          	sar    $0x3,%rbp
  40231c:	e8 0f e8 ff ff       	callq  400b30 <_init>
  402321:	48 85 ed             	test   %rbp,%rbp
  402324:	74 20                	je     402346 <__libc_csu_init+0x56>
  402326:	31 db                	xor    %ebx,%ebx
  402328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40232f:	00 
  402330:	4c 89 fa             	mov    %r15,%rdx
  402333:	4c 89 f6             	mov    %r14,%rsi
  402336:	44 89 ef             	mov    %r13d,%edi
  402339:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40233d:	48 83 c3 01          	add    $0x1,%rbx
  402341:	48 39 dd             	cmp    %rbx,%rbp
  402344:	75 ea                	jne    402330 <__libc_csu_init+0x40>
  402346:	48 83 c4 08          	add    $0x8,%rsp
  40234a:	5b                   	pop    %rbx
  40234b:	5d                   	pop    %rbp
  40234c:	41 5c                	pop    %r12
  40234e:	41 5d                	pop    %r13
  402350:	41 5e                	pop    %r14
  402352:	41 5f                	pop    %r15
  402354:	c3                   	retq   
  402355:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40235c:	00 00 00 00 

0000000000402360 <__libc_csu_fini>:
  402360:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000402364 <_fini>:
  402364:	48 83 ec 08          	sub    $0x8,%rsp
  402368:	48 83 c4 08          	add    $0x8,%rsp
  40236c:	c3                   	retq   
